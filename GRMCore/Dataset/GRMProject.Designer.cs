//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GRMCore.Dataset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GRMProject")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GRMProject : global::System.Data.DataSet {
        
        private ProjectSettingsDataTable tableProjectSettings;
        
        private RTenvDataTable tableRTenv;
        
        private SubWatershedSettingsDataTable tableSubWatershedSettings;
        
        private WatchPointsDataTable tableWatchPoints;
        
        private FlowControlGridDataTable tableFlowControlGrid;
        
        private GreenAmptParameterDataTable tableGreenAmptParameter;
        
        private SoilDepthDataTable tableSoilDepth;
        
        private LandCoverDataTable tableLandCover;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public GRMProject() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected GRMProject(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProjectSettings"] != null)) {
                    base.Tables.Add(new ProjectSettingsDataTable(ds.Tables["ProjectSettings"]));
                }
                if ((ds.Tables["RTenv"] != null)) {
                    base.Tables.Add(new RTenvDataTable(ds.Tables["RTenv"]));
                }
                if ((ds.Tables["SubWatershedSettings"] != null)) {
                    base.Tables.Add(new SubWatershedSettingsDataTable(ds.Tables["SubWatershedSettings"]));
                }
                if ((ds.Tables["WatchPoints"] != null)) {
                    base.Tables.Add(new WatchPointsDataTable(ds.Tables["WatchPoints"]));
                }
                if ((ds.Tables["FlowControlGrid"] != null)) {
                    base.Tables.Add(new FlowControlGridDataTable(ds.Tables["FlowControlGrid"]));
                }
                if ((ds.Tables["GreenAmptParameter"] != null)) {
                    base.Tables.Add(new GreenAmptParameterDataTable(ds.Tables["GreenAmptParameter"]));
                }
                if ((ds.Tables["SoilDepth"] != null)) {
                    base.Tables.Add(new SoilDepthDataTable(ds.Tables["SoilDepth"]));
                }
                if ((ds.Tables["LandCover"] != null)) {
                    base.Tables.Add(new LandCoverDataTable(ds.Tables["LandCover"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProjectSettingsDataTable ProjectSettings {
            get {
                return this.tableProjectSettings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RTenvDataTable RTenv {
            get {
                return this.tableRTenv;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubWatershedSettingsDataTable SubWatershedSettings {
            get {
                return this.tableSubWatershedSettings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WatchPointsDataTable WatchPoints {
            get {
                return this.tableWatchPoints;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FlowControlGridDataTable FlowControlGrid {
            get {
                return this.tableFlowControlGrid;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GreenAmptParameterDataTable GreenAmptParameter {
            get {
                return this.tableGreenAmptParameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SoilDepthDataTable SoilDepth {
            get {
                return this.tableSoilDepth;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LandCoverDataTable LandCover {
            get {
                return this.tableLandCover;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            GRMProject cln = ((GRMProject)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProjectSettings"] != null)) {
                    base.Tables.Add(new ProjectSettingsDataTable(ds.Tables["ProjectSettings"]));
                }
                if ((ds.Tables["RTenv"] != null)) {
                    base.Tables.Add(new RTenvDataTable(ds.Tables["RTenv"]));
                }
                if ((ds.Tables["SubWatershedSettings"] != null)) {
                    base.Tables.Add(new SubWatershedSettingsDataTable(ds.Tables["SubWatershedSettings"]));
                }
                if ((ds.Tables["WatchPoints"] != null)) {
                    base.Tables.Add(new WatchPointsDataTable(ds.Tables["WatchPoints"]));
                }
                if ((ds.Tables["FlowControlGrid"] != null)) {
                    base.Tables.Add(new FlowControlGridDataTable(ds.Tables["FlowControlGrid"]));
                }
                if ((ds.Tables["GreenAmptParameter"] != null)) {
                    base.Tables.Add(new GreenAmptParameterDataTable(ds.Tables["GreenAmptParameter"]));
                }
                if ((ds.Tables["SoilDepth"] != null)) {
                    base.Tables.Add(new SoilDepthDataTable(ds.Tables["SoilDepth"]));
                }
                if ((ds.Tables["LandCover"] != null)) {
                    base.Tables.Add(new LandCoverDataTable(ds.Tables["LandCover"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProjectSettings = ((ProjectSettingsDataTable)(base.Tables["ProjectSettings"]));
            if ((initTable == true)) {
                if ((this.tableProjectSettings != null)) {
                    this.tableProjectSettings.InitVars();
                }
            }
            this.tableRTenv = ((RTenvDataTable)(base.Tables["RTenv"]));
            if ((initTable == true)) {
                if ((this.tableRTenv != null)) {
                    this.tableRTenv.InitVars();
                }
            }
            this.tableSubWatershedSettings = ((SubWatershedSettingsDataTable)(base.Tables["SubWatershedSettings"]));
            if ((initTable == true)) {
                if ((this.tableSubWatershedSettings != null)) {
                    this.tableSubWatershedSettings.InitVars();
                }
            }
            this.tableWatchPoints = ((WatchPointsDataTable)(base.Tables["WatchPoints"]));
            if ((initTable == true)) {
                if ((this.tableWatchPoints != null)) {
                    this.tableWatchPoints.InitVars();
                }
            }
            this.tableFlowControlGrid = ((FlowControlGridDataTable)(base.Tables["FlowControlGrid"]));
            if ((initTable == true)) {
                if ((this.tableFlowControlGrid != null)) {
                    this.tableFlowControlGrid.InitVars();
                }
            }
            this.tableGreenAmptParameter = ((GreenAmptParameterDataTable)(base.Tables["GreenAmptParameter"]));
            if ((initTable == true)) {
                if ((this.tableGreenAmptParameter != null)) {
                    this.tableGreenAmptParameter.InitVars();
                }
            }
            this.tableSoilDepth = ((SoilDepthDataTable)(base.Tables["SoilDepth"]));
            if ((initTable == true)) {
                if ((this.tableSoilDepth != null)) {
                    this.tableSoilDepth.InitVars();
                }
            }
            this.tableLandCover = ((LandCoverDataTable)(base.Tables["LandCover"]));
            if ((initTable == true)) {
                if ((this.tableLandCover != null)) {
                    this.tableLandCover.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "GRMProject";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GRMProject.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProjectSettings = new ProjectSettingsDataTable();
            base.Tables.Add(this.tableProjectSettings);
            this.tableRTenv = new RTenvDataTable();
            base.Tables.Add(this.tableRTenv);
            this.tableSubWatershedSettings = new SubWatershedSettingsDataTable();
            base.Tables.Add(this.tableSubWatershedSettings);
            this.tableWatchPoints = new WatchPointsDataTable();
            base.Tables.Add(this.tableWatchPoints);
            this.tableFlowControlGrid = new FlowControlGridDataTable();
            base.Tables.Add(this.tableFlowControlGrid);
            this.tableGreenAmptParameter = new GreenAmptParameterDataTable();
            base.Tables.Add(this.tableGreenAmptParameter);
            this.tableSoilDepth = new SoilDepthDataTable();
            base.Tables.Add(this.tableSoilDepth);
            this.tableLandCover = new LandCoverDataTable();
            base.Tables.Add(this.tableLandCover);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeProjectSettings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeRTenv() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeSubWatershedSettings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeWatchPoints() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeFlowControlGrid() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeGreenAmptParameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeSoilDepth() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeLandCover() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GRMProject ds = new GRMProject();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void ProjectSettingsRowChangeEventHandler(object sender, ProjectSettingsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void RTenvRowChangeEventHandler(object sender, RTenvRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void SubWatershedSettingsRowChangeEventHandler(object sender, SubWatershedSettingsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void WatchPointsRowChangeEventHandler(object sender, WatchPointsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void FlowControlGridRowChangeEventHandler(object sender, FlowControlGridRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void GreenAmptParameterRowChangeEventHandler(object sender, GreenAmptParameterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void SoilDepthRowChangeEventHandler(object sender, SoilDepthRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void LandCoverRowChangeEventHandler(object sender, LandCoverRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProjectSettingsDataTable : global::System.Data.TypedTableBase<ProjectSettingsRow> {
            
            private global::System.Data.DataColumn columnProjectFile;
            
            private global::System.Data.DataColumn columnGRMSimulationType;
            
            private global::System.Data.DataColumn columnWatershedFile;
            
            private global::System.Data.DataColumn columnSlopeFile;
            
            private global::System.Data.DataColumn columnFlowDirectionFile;
            
            private global::System.Data.DataColumn columnFlowAccumFile;
            
            private global::System.Data.DataColumn columnStreamFile;
            
            private global::System.Data.DataColumn columnChannelWidthFile;
            
            private global::System.Data.DataColumn columnLandCoverDataType;
            
            private global::System.Data.DataColumn columnLandCoverFile;
            
            private global::System.Data.DataColumn columnLandCoverVATFile;
            
            private global::System.Data.DataColumn columnConstantRoughnessCoeff;
            
            private global::System.Data.DataColumn columnConstantImperviousRatio;
            
            private global::System.Data.DataColumn columnSoilTextureDataType;
            
            private global::System.Data.DataColumn columnSoilTextureFile;
            
            private global::System.Data.DataColumn columnSoilTextureVATFile;
            
            private global::System.Data.DataColumn columnConstantSoilPorosity;
            
            private global::System.Data.DataColumn columnConstantSoilEffPorosity;
            
            private global::System.Data.DataColumn columnConstantSoilWettingFrontSuctionHead;
            
            private global::System.Data.DataColumn columnConstantSoilHydraulicConductivity;
            
            private global::System.Data.DataColumn columnSoilDepthDataType;
            
            private global::System.Data.DataColumn columnSoilDepthFile;
            
            private global::System.Data.DataColumn columnSoilDepthVATFile;
            
            private global::System.Data.DataColumn columnConstantSoilDepth;
            
            private global::System.Data.DataColumn columnInitialSoilSaturationRatioFile;
            
            private global::System.Data.DataColumn columnInitialChannelFlowFile;
            
            private global::System.Data.DataColumn columnRainfallDataType;
            
            private global::System.Data.DataColumn columnRainfallInterval;
            
            private global::System.Data.DataColumn columnRainfallDataFile;
            
            private global::System.Data.DataColumn columnFlowDirectionType;
            
            private global::System.Data.DataColumn columnIsParallel;
            
            private global::System.Data.DataColumn columnMaxDegreeOfParallelism;
            
            private global::System.Data.DataColumn columnSimulStartingTime;
            
            private global::System.Data.DataColumn columnSimulationDuration;
            
            private global::System.Data.DataColumn columnComputationalTimeStep;
            
            private global::System.Data.DataColumn columnIsFixedTimeStep;
            
            private global::System.Data.DataColumn columnOutputTimeStep;
            
            private global::System.Data.DataColumn columnCrossSectionType;
            
            private global::System.Data.DataColumn columnSingleCSChannelWidthType;
            
            private global::System.Data.DataColumn columnChannelWidthEQc;
            
            private global::System.Data.DataColumn columnChannelWidthEQd;
            
            private global::System.Data.DataColumn columnChannelWidthEQe;
            
            private global::System.Data.DataColumn columnChannelWidthMostDownStream;
            
            private global::System.Data.DataColumn columnLowerRegionHeight;
            
            private global::System.Data.DataColumn columnLowerRegionBaseWidth;
            
            private global::System.Data.DataColumn columnUpperRegionBaseWidth;
            
            private global::System.Data.DataColumn columnCompoundCSChannelWidthLimit;
            
            private global::System.Data.DataColumn columnBankSideSlopeRight;
            
            private global::System.Data.DataColumn columnBankSideSlopeLeft;
            
            private global::System.Data.DataColumn columnSimulateInfiltration;
            
            private global::System.Data.DataColumn columnSimulateSubsurfaceFlow;
            
            private global::System.Data.DataColumn columnSimulateBaseFlow;
            
            private global::System.Data.DataColumn columnSimulateFlowControl;
            
            private global::System.Data.DataColumn columnMakeIMGFile;
            
            private global::System.Data.DataColumn columnMakeASCFile;
            
            private global::System.Data.DataColumn columnMakeSoilSaturationDistFile;
            
            private global::System.Data.DataColumn columnMakeRfDistFile;
            
            private global::System.Data.DataColumn columnMakeRFaccDistFile;
            
            private global::System.Data.DataColumn columnMakeFlowDistFile;
            
            private global::System.Data.DataColumn columnPrintOption;
            
            private global::System.Data.DataColumn columnWriteLog;
            
            private global::System.Data.DataColumn columnAboutThisProject;
            
            private global::System.Data.DataColumn columnAboutWatershed;
            
            private global::System.Data.DataColumn columnAboutLandCoverMap;
            
            private global::System.Data.DataColumn columnAboutSoilMap;
            
            private global::System.Data.DataColumn columnAboutSoilDepthMap;
            
            private global::System.Data.DataColumn columnAboutRainfall;
            
            private global::System.Data.DataColumn columnProjectSavedTime;
            
            private global::System.Data.DataColumn columnComputerName;
            
            private global::System.Data.DataColumn columnComputerUserName;
            
            private global::System.Data.DataColumn columnGRMVersion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsDataTable() {
                this.TableName = "ProjectSettings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ProjectSettingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected ProjectSettingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProjectFileColumn {
                get {
                    return this.columnProjectFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GRMSimulationTypeColumn {
                get {
                    return this.columnGRMSimulationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WatershedFileColumn {
                get {
                    return this.columnWatershedFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SlopeFileColumn {
                get {
                    return this.columnSlopeFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FlowDirectionFileColumn {
                get {
                    return this.columnFlowDirectionFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FlowAccumFileColumn {
                get {
                    return this.columnFlowAccumFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StreamFileColumn {
                get {
                    return this.columnStreamFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ChannelWidthFileColumn {
                get {
                    return this.columnChannelWidthFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LandCoverDataTypeColumn {
                get {
                    return this.columnLandCoverDataType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LandCoverFileColumn {
                get {
                    return this.columnLandCoverFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LandCoverVATFileColumn {
                get {
                    return this.columnLandCoverVATFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConstantRoughnessCoeffColumn {
                get {
                    return this.columnConstantRoughnessCoeff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConstantImperviousRatioColumn {
                get {
                    return this.columnConstantImperviousRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SoilTextureDataTypeColumn {
                get {
                    return this.columnSoilTextureDataType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SoilTextureFileColumn {
                get {
                    return this.columnSoilTextureFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SoilTextureVATFileColumn {
                get {
                    return this.columnSoilTextureVATFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConstantSoilPorosityColumn {
                get {
                    return this.columnConstantSoilPorosity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConstantSoilEffPorosityColumn {
                get {
                    return this.columnConstantSoilEffPorosity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConstantSoilWettingFrontSuctionHeadColumn {
                get {
                    return this.columnConstantSoilWettingFrontSuctionHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConstantSoilHydraulicConductivityColumn {
                get {
                    return this.columnConstantSoilHydraulicConductivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SoilDepthDataTypeColumn {
                get {
                    return this.columnSoilDepthDataType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SoilDepthFileColumn {
                get {
                    return this.columnSoilDepthFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SoilDepthVATFileColumn {
                get {
                    return this.columnSoilDepthVATFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConstantSoilDepthColumn {
                get {
                    return this.columnConstantSoilDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InitialSoilSaturationRatioFileColumn {
                get {
                    return this.columnInitialSoilSaturationRatioFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InitialChannelFlowFileColumn {
                get {
                    return this.columnInitialChannelFlowFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RainfallDataTypeColumn {
                get {
                    return this.columnRainfallDataType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RainfallIntervalColumn {
                get {
                    return this.columnRainfallInterval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RainfallDataFileColumn {
                get {
                    return this.columnRainfallDataFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FlowDirectionTypeColumn {
                get {
                    return this.columnFlowDirectionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsParallelColumn {
                get {
                    return this.columnIsParallel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxDegreeOfParallelismColumn {
                get {
                    return this.columnMaxDegreeOfParallelism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SimulStartingTimeColumn {
                get {
                    return this.columnSimulStartingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SimulationDurationColumn {
                get {
                    return this.columnSimulationDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ComputationalTimeStepColumn {
                get {
                    return this.columnComputationalTimeStep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsFixedTimeStepColumn {
                get {
                    return this.columnIsFixedTimeStep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutputTimeStepColumn {
                get {
                    return this.columnOutputTimeStep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CrossSectionTypeColumn {
                get {
                    return this.columnCrossSectionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SingleCSChannelWidthTypeColumn {
                get {
                    return this.columnSingleCSChannelWidthType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ChannelWidthEQcColumn {
                get {
                    return this.columnChannelWidthEQc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ChannelWidthEQdColumn {
                get {
                    return this.columnChannelWidthEQd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ChannelWidthEQeColumn {
                get {
                    return this.columnChannelWidthEQe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ChannelWidthMostDownStreamColumn {
                get {
                    return this.columnChannelWidthMostDownStream;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LowerRegionHeightColumn {
                get {
                    return this.columnLowerRegionHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LowerRegionBaseWidthColumn {
                get {
                    return this.columnLowerRegionBaseWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UpperRegionBaseWidthColumn {
                get {
                    return this.columnUpperRegionBaseWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CompoundCSChannelWidthLimitColumn {
                get {
                    return this.columnCompoundCSChannelWidthLimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BankSideSlopeRightColumn {
                get {
                    return this.columnBankSideSlopeRight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BankSideSlopeLeftColumn {
                get {
                    return this.columnBankSideSlopeLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SimulateInfiltrationColumn {
                get {
                    return this.columnSimulateInfiltration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SimulateSubsurfaceFlowColumn {
                get {
                    return this.columnSimulateSubsurfaceFlow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SimulateBaseFlowColumn {
                get {
                    return this.columnSimulateBaseFlow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SimulateFlowControlColumn {
                get {
                    return this.columnSimulateFlowControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MakeIMGFileColumn {
                get {
                    return this.columnMakeIMGFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MakeASCFileColumn {
                get {
                    return this.columnMakeASCFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MakeSoilSaturationDistFileColumn {
                get {
                    return this.columnMakeSoilSaturationDistFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MakeRfDistFileColumn {
                get {
                    return this.columnMakeRfDistFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MakeRFaccDistFileColumn {
                get {
                    return this.columnMakeRFaccDistFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MakeFlowDistFileColumn {
                get {
                    return this.columnMakeFlowDistFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrintOptionColumn {
                get {
                    return this.columnPrintOption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WriteLogColumn {
                get {
                    return this.columnWriteLog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AboutThisProjectColumn {
                get {
                    return this.columnAboutThisProject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AboutWatershedColumn {
                get {
                    return this.columnAboutWatershed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AboutLandCoverMapColumn {
                get {
                    return this.columnAboutLandCoverMap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AboutSoilMapColumn {
                get {
                    return this.columnAboutSoilMap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AboutSoilDepthMapColumn {
                get {
                    return this.columnAboutSoilDepthMap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AboutRainfallColumn {
                get {
                    return this.columnAboutRainfall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProjectSavedTimeColumn {
                get {
                    return this.columnProjectSavedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ComputerNameColumn {
                get {
                    return this.columnComputerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ComputerUserNameColumn {
                get {
                    return this.columnComputerUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GRMVersionColumn {
                get {
                    return this.columnGRMVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRow this[int index] {
                get {
                    return ((ProjectSettingsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProjectSettingsRowChangeEventHandler ProjectSettingsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProjectSettingsRowChangeEventHandler ProjectSettingsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProjectSettingsRowChangeEventHandler ProjectSettingsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProjectSettingsRowChangeEventHandler ProjectSettingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddProjectSettingsRow(ProjectSettingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRow AddProjectSettingsRow(
                        string ProjectFile, 
                        string GRMSimulationType, 
                        string WatershedFile, 
                        string SlopeFile, 
                        string FlowDirectionFile, 
                        string FlowAccumFile, 
                        string StreamFile, 
                        string ChannelWidthFile, 
                        string LandCoverDataType, 
                        string LandCoverFile, 
                        string LandCoverVATFile, 
                        string ConstantRoughnessCoeff, 
                        string ConstantImperviousRatio, 
                        string SoilTextureDataType, 
                        string SoilTextureFile, 
                        string SoilTextureVATFile, 
                        string ConstantSoilPorosity, 
                        string ConstantSoilEffPorosity, 
                        string ConstantSoilWettingFrontSuctionHead, 
                        string ConstantSoilHydraulicConductivity, 
                        string SoilDepthDataType, 
                        string SoilDepthFile, 
                        string SoilDepthVATFile, 
                        string ConstantSoilDepth, 
                        string InitialSoilSaturationRatioFile, 
                        string InitialChannelFlowFile, 
                        string RainfallDataType, 
                        string RainfallInterval, 
                        string RainfallDataFile, 
                        string FlowDirectionType, 
                        string IsParallel, 
                        string MaxDegreeOfParallelism, 
                        string SimulStartingTime, 
                        string SimulationDuration, 
                        string ComputationalTimeStep, 
                        string IsFixedTimeStep, 
                        string OutputTimeStep, 
                        string CrossSectionType, 
                        string SingleCSChannelWidthType, 
                        string ChannelWidthEQc, 
                        string ChannelWidthEQd, 
                        string ChannelWidthEQe, 
                        string ChannelWidthMostDownStream, 
                        string LowerRegionHeight, 
                        string LowerRegionBaseWidth, 
                        string UpperRegionBaseWidth, 
                        string CompoundCSChannelWidthLimit, 
                        string BankSideSlopeRight, 
                        string BankSideSlopeLeft, 
                        string SimulateInfiltration, 
                        string SimulateSubsurfaceFlow, 
                        string SimulateBaseFlow, 
                        string SimulateFlowControl, 
                        string MakeIMGFile, 
                        string MakeASCFile, 
                        string MakeSoilSaturationDistFile, 
                        string MakeRfDistFile, 
                        string MakeRFaccDistFile, 
                        string MakeFlowDistFile, 
                        string PrintOption, 
                        string WriteLog, 
                        string AboutThisProject, 
                        string AboutWatershed, 
                        string AboutLandCoverMap, 
                        string AboutSoilMap, 
                        string AboutSoilDepthMap, 
                        string AboutRainfall, 
                        string ProjectSavedTime, 
                        string ComputerName, 
                        string ComputerUserName, 
                        string GRMVersion) {
                ProjectSettingsRow rowProjectSettingsRow = ((ProjectSettingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectFile,
                        GRMSimulationType,
                        WatershedFile,
                        SlopeFile,
                        FlowDirectionFile,
                        FlowAccumFile,
                        StreamFile,
                        ChannelWidthFile,
                        LandCoverDataType,
                        LandCoverFile,
                        LandCoverVATFile,
                        ConstantRoughnessCoeff,
                        ConstantImperviousRatio,
                        SoilTextureDataType,
                        SoilTextureFile,
                        SoilTextureVATFile,
                        ConstantSoilPorosity,
                        ConstantSoilEffPorosity,
                        ConstantSoilWettingFrontSuctionHead,
                        ConstantSoilHydraulicConductivity,
                        SoilDepthDataType,
                        SoilDepthFile,
                        SoilDepthVATFile,
                        ConstantSoilDepth,
                        InitialSoilSaturationRatioFile,
                        InitialChannelFlowFile,
                        RainfallDataType,
                        RainfallInterval,
                        RainfallDataFile,
                        FlowDirectionType,
                        IsParallel,
                        MaxDegreeOfParallelism,
                        SimulStartingTime,
                        SimulationDuration,
                        ComputationalTimeStep,
                        IsFixedTimeStep,
                        OutputTimeStep,
                        CrossSectionType,
                        SingleCSChannelWidthType,
                        ChannelWidthEQc,
                        ChannelWidthEQd,
                        ChannelWidthEQe,
                        ChannelWidthMostDownStream,
                        LowerRegionHeight,
                        LowerRegionBaseWidth,
                        UpperRegionBaseWidth,
                        CompoundCSChannelWidthLimit,
                        BankSideSlopeRight,
                        BankSideSlopeLeft,
                        SimulateInfiltration,
                        SimulateSubsurfaceFlow,
                        SimulateBaseFlow,
                        SimulateFlowControl,
                        MakeIMGFile,
                        MakeASCFile,
                        MakeSoilSaturationDistFile,
                        MakeRfDistFile,
                        MakeRFaccDistFile,
                        MakeFlowDistFile,
                        PrintOption,
                        WriteLog,
                        AboutThisProject,
                        AboutWatershed,
                        AboutLandCoverMap,
                        AboutSoilMap,
                        AboutSoilDepthMap,
                        AboutRainfall,
                        ProjectSavedTime,
                        ComputerName,
                        ComputerUserName,
                        GRMVersion};
                rowProjectSettingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProjectSettingsRow);
                return rowProjectSettingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProjectSettingsDataTable cln = ((ProjectSettingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProjectSettingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnProjectFile = base.Columns["ProjectFile"];
                this.columnGRMSimulationType = base.Columns["GRMSimulationType"];
                this.columnWatershedFile = base.Columns["WatershedFile"];
                this.columnSlopeFile = base.Columns["SlopeFile"];
                this.columnFlowDirectionFile = base.Columns["FlowDirectionFile"];
                this.columnFlowAccumFile = base.Columns["FlowAccumFile"];
                this.columnStreamFile = base.Columns["StreamFile"];
                this.columnChannelWidthFile = base.Columns["ChannelWidthFile"];
                this.columnLandCoverDataType = base.Columns["LandCoverDataType"];
                this.columnLandCoverFile = base.Columns["LandCoverFile"];
                this.columnLandCoverVATFile = base.Columns["LandCoverVATFile"];
                this.columnConstantRoughnessCoeff = base.Columns["ConstantRoughnessCoeff"];
                this.columnConstantImperviousRatio = base.Columns["ConstantImperviousRatio"];
                this.columnSoilTextureDataType = base.Columns["SoilTextureDataType"];
                this.columnSoilTextureFile = base.Columns["SoilTextureFile"];
                this.columnSoilTextureVATFile = base.Columns["SoilTextureVATFile"];
                this.columnConstantSoilPorosity = base.Columns["ConstantSoilPorosity"];
                this.columnConstantSoilEffPorosity = base.Columns["ConstantSoilEffPorosity"];
                this.columnConstantSoilWettingFrontSuctionHead = base.Columns["ConstantSoilWettingFrontSuctionHead"];
                this.columnConstantSoilHydraulicConductivity = base.Columns["ConstantSoilHydraulicConductivity"];
                this.columnSoilDepthDataType = base.Columns["SoilDepthDataType"];
                this.columnSoilDepthFile = base.Columns["SoilDepthFile"];
                this.columnSoilDepthVATFile = base.Columns["SoilDepthVATFile"];
                this.columnConstantSoilDepth = base.Columns["ConstantSoilDepth"];
                this.columnInitialSoilSaturationRatioFile = base.Columns["InitialSoilSaturationRatioFile"];
                this.columnInitialChannelFlowFile = base.Columns["InitialChannelFlowFile"];
                this.columnRainfallDataType = base.Columns["RainfallDataType"];
                this.columnRainfallInterval = base.Columns["RainfallInterval"];
                this.columnRainfallDataFile = base.Columns["RainfallDataFile"];
                this.columnFlowDirectionType = base.Columns["FlowDirectionType"];
                this.columnIsParallel = base.Columns["IsParallel"];
                this.columnMaxDegreeOfParallelism = base.Columns["MaxDegreeOfParallelism"];
                this.columnSimulStartingTime = base.Columns["SimulStartingTime"];
                this.columnSimulationDuration = base.Columns["SimulationDuration"];
                this.columnComputationalTimeStep = base.Columns["ComputationalTimeStep"];
                this.columnIsFixedTimeStep = base.Columns["IsFixedTimeStep"];
                this.columnOutputTimeStep = base.Columns["OutputTimeStep"];
                this.columnCrossSectionType = base.Columns["CrossSectionType"];
                this.columnSingleCSChannelWidthType = base.Columns["SingleCSChannelWidthType"];
                this.columnChannelWidthEQc = base.Columns["ChannelWidthEQc"];
                this.columnChannelWidthEQd = base.Columns["ChannelWidthEQd"];
                this.columnChannelWidthEQe = base.Columns["ChannelWidthEQe"];
                this.columnChannelWidthMostDownStream = base.Columns["ChannelWidthMostDownStream"];
                this.columnLowerRegionHeight = base.Columns["LowerRegionHeight"];
                this.columnLowerRegionBaseWidth = base.Columns["LowerRegionBaseWidth"];
                this.columnUpperRegionBaseWidth = base.Columns["UpperRegionBaseWidth"];
                this.columnCompoundCSChannelWidthLimit = base.Columns["CompoundCSChannelWidthLimit"];
                this.columnBankSideSlopeRight = base.Columns["BankSideSlopeRight"];
                this.columnBankSideSlopeLeft = base.Columns["BankSideSlopeLeft"];
                this.columnSimulateInfiltration = base.Columns["SimulateInfiltration"];
                this.columnSimulateSubsurfaceFlow = base.Columns["SimulateSubsurfaceFlow"];
                this.columnSimulateBaseFlow = base.Columns["SimulateBaseFlow"];
                this.columnSimulateFlowControl = base.Columns["SimulateFlowControl"];
                this.columnMakeIMGFile = base.Columns["MakeIMGFile"];
                this.columnMakeASCFile = base.Columns["MakeASCFile"];
                this.columnMakeSoilSaturationDistFile = base.Columns["MakeSoilSaturationDistFile"];
                this.columnMakeRfDistFile = base.Columns["MakeRfDistFile"];
                this.columnMakeRFaccDistFile = base.Columns["MakeRFaccDistFile"];
                this.columnMakeFlowDistFile = base.Columns["MakeFlowDistFile"];
                this.columnPrintOption = base.Columns["PrintOption"];
                this.columnWriteLog = base.Columns["WriteLog"];
                this.columnAboutThisProject = base.Columns["AboutThisProject"];
                this.columnAboutWatershed = base.Columns["AboutWatershed"];
                this.columnAboutLandCoverMap = base.Columns["AboutLandCoverMap"];
                this.columnAboutSoilMap = base.Columns["AboutSoilMap"];
                this.columnAboutSoilDepthMap = base.Columns["AboutSoilDepthMap"];
                this.columnAboutRainfall = base.Columns["AboutRainfall"];
                this.columnProjectSavedTime = base.Columns["ProjectSavedTime"];
                this.columnComputerName = base.Columns["ComputerName"];
                this.columnComputerUserName = base.Columns["ComputerUserName"];
                this.columnGRMVersion = base.Columns["GRMVersion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnProjectFile = new global::System.Data.DataColumn("ProjectFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectFile);
                this.columnGRMSimulationType = new global::System.Data.DataColumn("GRMSimulationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRMSimulationType);
                this.columnWatershedFile = new global::System.Data.DataColumn("WatershedFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWatershedFile);
                this.columnSlopeFile = new global::System.Data.DataColumn("SlopeFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlopeFile);
                this.columnFlowDirectionFile = new global::System.Data.DataColumn("FlowDirectionFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowDirectionFile);
                this.columnFlowAccumFile = new global::System.Data.DataColumn("FlowAccumFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowAccumFile);
                this.columnStreamFile = new global::System.Data.DataColumn("StreamFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreamFile);
                this.columnChannelWidthFile = new global::System.Data.DataColumn("ChannelWidthFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannelWidthFile);
                this.columnLandCoverDataType = new global::System.Data.DataColumn("LandCoverDataType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCoverDataType);
                this.columnLandCoverFile = new global::System.Data.DataColumn("LandCoverFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCoverFile);
                this.columnLandCoverVATFile = new global::System.Data.DataColumn("LandCoverVATFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCoverVATFile);
                this.columnConstantRoughnessCoeff = new global::System.Data.DataColumn("ConstantRoughnessCoeff", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstantRoughnessCoeff);
                this.columnConstantImperviousRatio = new global::System.Data.DataColumn("ConstantImperviousRatio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstantImperviousRatio);
                this.columnSoilTextureDataType = new global::System.Data.DataColumn("SoilTextureDataType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoilTextureDataType);
                this.columnSoilTextureFile = new global::System.Data.DataColumn("SoilTextureFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoilTextureFile);
                this.columnSoilTextureVATFile = new global::System.Data.DataColumn("SoilTextureVATFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoilTextureVATFile);
                this.columnConstantSoilPorosity = new global::System.Data.DataColumn("ConstantSoilPorosity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstantSoilPorosity);
                this.columnConstantSoilEffPorosity = new global::System.Data.DataColumn("ConstantSoilEffPorosity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstantSoilEffPorosity);
                this.columnConstantSoilWettingFrontSuctionHead = new global::System.Data.DataColumn("ConstantSoilWettingFrontSuctionHead", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstantSoilWettingFrontSuctionHead);
                this.columnConstantSoilHydraulicConductivity = new global::System.Data.DataColumn("ConstantSoilHydraulicConductivity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstantSoilHydraulicConductivity);
                this.columnSoilDepthDataType = new global::System.Data.DataColumn("SoilDepthDataType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoilDepthDataType);
                this.columnSoilDepthFile = new global::System.Data.DataColumn("SoilDepthFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoilDepthFile);
                this.columnSoilDepthVATFile = new global::System.Data.DataColumn("SoilDepthVATFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoilDepthVATFile);
                this.columnConstantSoilDepth = new global::System.Data.DataColumn("ConstantSoilDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstantSoilDepth);
                this.columnInitialSoilSaturationRatioFile = new global::System.Data.DataColumn("InitialSoilSaturationRatioFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialSoilSaturationRatioFile);
                this.columnInitialChannelFlowFile = new global::System.Data.DataColumn("InitialChannelFlowFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialChannelFlowFile);
                this.columnRainfallDataType = new global::System.Data.DataColumn("RainfallDataType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRainfallDataType);
                this.columnRainfallInterval = new global::System.Data.DataColumn("RainfallInterval", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRainfallInterval);
                this.columnRainfallDataFile = new global::System.Data.DataColumn("RainfallDataFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRainfallDataFile);
                this.columnFlowDirectionType = new global::System.Data.DataColumn("FlowDirectionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowDirectionType);
                this.columnIsParallel = new global::System.Data.DataColumn("IsParallel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsParallel);
                this.columnMaxDegreeOfParallelism = new global::System.Data.DataColumn("MaxDegreeOfParallelism", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDegreeOfParallelism);
                this.columnSimulStartingTime = new global::System.Data.DataColumn("SimulStartingTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimulStartingTime);
                this.columnSimulationDuration = new global::System.Data.DataColumn("SimulationDuration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimulationDuration);
                this.columnComputationalTimeStep = new global::System.Data.DataColumn("ComputationalTimeStep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputationalTimeStep);
                this.columnIsFixedTimeStep = new global::System.Data.DataColumn("IsFixedTimeStep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFixedTimeStep);
                this.columnOutputTimeStep = new global::System.Data.DataColumn("OutputTimeStep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputTimeStep);
                this.columnCrossSectionType = new global::System.Data.DataColumn("CrossSectionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrossSectionType);
                this.columnSingleCSChannelWidthType = new global::System.Data.DataColumn("SingleCSChannelWidthType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSingleCSChannelWidthType);
                this.columnChannelWidthEQc = new global::System.Data.DataColumn("ChannelWidthEQc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannelWidthEQc);
                this.columnChannelWidthEQd = new global::System.Data.DataColumn("ChannelWidthEQd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannelWidthEQd);
                this.columnChannelWidthEQe = new global::System.Data.DataColumn("ChannelWidthEQe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannelWidthEQe);
                this.columnChannelWidthMostDownStream = new global::System.Data.DataColumn("ChannelWidthMostDownStream", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChannelWidthMostDownStream);
                this.columnLowerRegionHeight = new global::System.Data.DataColumn("LowerRegionHeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowerRegionHeight);
                this.columnLowerRegionBaseWidth = new global::System.Data.DataColumn("LowerRegionBaseWidth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowerRegionBaseWidth);
                this.columnUpperRegionBaseWidth = new global::System.Data.DataColumn("UpperRegionBaseWidth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpperRegionBaseWidth);
                this.columnCompoundCSChannelWidthLimit = new global::System.Data.DataColumn("CompoundCSChannelWidthLimit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompoundCSChannelWidthLimit);
                this.columnBankSideSlopeRight = new global::System.Data.DataColumn("BankSideSlopeRight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankSideSlopeRight);
                this.columnBankSideSlopeLeft = new global::System.Data.DataColumn("BankSideSlopeLeft", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankSideSlopeLeft);
                this.columnSimulateInfiltration = new global::System.Data.DataColumn("SimulateInfiltration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimulateInfiltration);
                this.columnSimulateSubsurfaceFlow = new global::System.Data.DataColumn("SimulateSubsurfaceFlow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimulateSubsurfaceFlow);
                this.columnSimulateBaseFlow = new global::System.Data.DataColumn("SimulateBaseFlow", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimulateBaseFlow);
                this.columnSimulateFlowControl = new global::System.Data.DataColumn("SimulateFlowControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimulateFlowControl);
                this.columnMakeIMGFile = new global::System.Data.DataColumn("MakeIMGFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeIMGFile);
                this.columnMakeASCFile = new global::System.Data.DataColumn("MakeASCFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeASCFile);
                this.columnMakeSoilSaturationDistFile = new global::System.Data.DataColumn("MakeSoilSaturationDistFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeSoilSaturationDistFile);
                this.columnMakeRfDistFile = new global::System.Data.DataColumn("MakeRfDistFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeRfDistFile);
                this.columnMakeRFaccDistFile = new global::System.Data.DataColumn("MakeRFaccDistFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeRFaccDistFile);
                this.columnMakeFlowDistFile = new global::System.Data.DataColumn("MakeFlowDistFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeFlowDistFile);
                this.columnPrintOption = new global::System.Data.DataColumn("PrintOption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintOption);
                this.columnWriteLog = new global::System.Data.DataColumn("WriteLog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWriteLog);
                this.columnAboutThisProject = new global::System.Data.DataColumn("AboutThisProject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAboutThisProject);
                this.columnAboutWatershed = new global::System.Data.DataColumn("AboutWatershed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAboutWatershed);
                this.columnAboutLandCoverMap = new global::System.Data.DataColumn("AboutLandCoverMap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAboutLandCoverMap);
                this.columnAboutSoilMap = new global::System.Data.DataColumn("AboutSoilMap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAboutSoilMap);
                this.columnAboutSoilDepthMap = new global::System.Data.DataColumn("AboutSoilDepthMap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAboutSoilDepthMap);
                this.columnAboutRainfall = new global::System.Data.DataColumn("AboutRainfall", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAboutRainfall);
                this.columnProjectSavedTime = new global::System.Data.DataColumn("ProjectSavedTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectSavedTime);
                this.columnComputerName = new global::System.Data.DataColumn("ComputerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputerName);
                this.columnComputerUserName = new global::System.Data.DataColumn("ComputerUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputerUserName);
                this.columnGRMVersion = new global::System.Data.DataColumn("GRMVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRMVersion);
                this.columnProjectFile.AllowDBNull = false;
                this.columnFlowDirectionType.Caption = "GridCellSize";
                this.columnMaxDegreeOfParallelism.Caption = "IsParallel";
                this.columnIsFixedTimeStep.Caption = "MakeASCFile";
                this.columnMakeSoilSaturationDistFile.Caption = "DataColumn1";
                this.columnMakeRfDistFile.Caption = "DataColumn2";
                this.columnMakeRFaccDistFile.Caption = "DataColumn3";
                this.columnMakeFlowDistFile.Caption = "DataColumn4";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRow NewProjectSettingsRow() {
                return ((ProjectSettingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProjectSettingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProjectSettingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProjectSettingsRowChanged != null)) {
                    this.ProjectSettingsRowChanged(this, new ProjectSettingsRowChangeEvent(((ProjectSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProjectSettingsRowChanging != null)) {
                    this.ProjectSettingsRowChanging(this, new ProjectSettingsRowChangeEvent(((ProjectSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProjectSettingsRowDeleted != null)) {
                    this.ProjectSettingsRowDeleted(this, new ProjectSettingsRowChangeEvent(((ProjectSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProjectSettingsRowDeleting != null)) {
                    this.ProjectSettingsRowDeleting(this, new ProjectSettingsRowChangeEvent(((ProjectSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveProjectSettingsRow(ProjectSettingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GRMProject ds = new GRMProject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProjectSettingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RTenvDataTable : global::System.Data.TypedTableBase<RTenvRow> {
            
            private global::System.Data.DataColumn columnProjectFPN;
            
            private global::System.Data.DataColumn columnRTRFfolderName;
            
            private global::System.Data.DataColumn columnIsFC;
            
            private global::System.Data.DataColumn columnIsDWSExist;
            
            private global::System.Data.DataColumn columnCWCellColXToConnectDW;
            
            private global::System.Data.DataColumn columnCWCellRowYToConnectDW;
            
            private global::System.Data.DataColumn columnDWCellColXToConnectCW;
            
            private global::System.Data.DataColumn columnDWCellRowYToConnectCW;
            
            private global::System.Data.DataColumn columnRFInterval_min;
            
            private global::System.Data.DataColumn columnOutputInterval_min;
            
            private global::System.Data.DataColumn columnRTstartingTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RTenvDataTable() {
                this.TableName = "RTenv";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal RTenvDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected RTenvDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProjectFPNColumn {
                get {
                    return this.columnProjectFPN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RTRFfolderNameColumn {
                get {
                    return this.columnRTRFfolderName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsFCColumn {
                get {
                    return this.columnIsFC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsDWSExistColumn {
                get {
                    return this.columnIsDWSExist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CWCellColXToConnectDWColumn {
                get {
                    return this.columnCWCellColXToConnectDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CWCellRowYToConnectDWColumn {
                get {
                    return this.columnCWCellRowYToConnectDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DWCellColXToConnectCWColumn {
                get {
                    return this.columnDWCellColXToConnectCW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DWCellRowYToConnectCWColumn {
                get {
                    return this.columnDWCellRowYToConnectCW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RFInterval_minColumn {
                get {
                    return this.columnRFInterval_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutputInterval_minColumn {
                get {
                    return this.columnOutputInterval_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RTstartingTimeColumn {
                get {
                    return this.columnRTstartingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RTenvRow this[int index] {
                get {
                    return ((RTenvRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event RTenvRowChangeEventHandler RTenvRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event RTenvRowChangeEventHandler RTenvRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event RTenvRowChangeEventHandler RTenvRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event RTenvRowChangeEventHandler RTenvRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddRTenvRow(RTenvRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RTenvRow AddRTenvRow(string ProjectFPN, string RTRFfolderName, bool IsFC, bool IsDWSExist, int CWCellColXToConnectDW, int CWCellRowYToConnectDW, int DWCellColXToConnectCW, int DWCellRowYToConnectCW, int RFInterval_min, int OutputInterval_min, string RTstartingTime) {
                RTenvRow rowRTenvRow = ((RTenvRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProjectFPN,
                        RTRFfolderName,
                        IsFC,
                        IsDWSExist,
                        CWCellColXToConnectDW,
                        CWCellRowYToConnectDW,
                        DWCellColXToConnectCW,
                        DWCellRowYToConnectCW,
                        RFInterval_min,
                        OutputInterval_min,
                        RTstartingTime};
                rowRTenvRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRTenvRow);
                return rowRTenvRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RTenvDataTable cln = ((RTenvDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RTenvDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnProjectFPN = base.Columns["ProjectFPN"];
                this.columnRTRFfolderName = base.Columns["RTRFfolderName"];
                this.columnIsFC = base.Columns["IsFC"];
                this.columnIsDWSExist = base.Columns["IsDWSExist"];
                this.columnCWCellColXToConnectDW = base.Columns["CWCellColXToConnectDW"];
                this.columnCWCellRowYToConnectDW = base.Columns["CWCellRowYToConnectDW"];
                this.columnDWCellColXToConnectCW = base.Columns["DWCellColXToConnectCW"];
                this.columnDWCellRowYToConnectCW = base.Columns["DWCellRowYToConnectCW"];
                this.columnRFInterval_min = base.Columns["RFInterval_min"];
                this.columnOutputInterval_min = base.Columns["OutputInterval_min"];
                this.columnRTstartingTime = base.Columns["RTstartingTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnProjectFPN = new global::System.Data.DataColumn("ProjectFPN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectFPN);
                this.columnRTRFfolderName = new global::System.Data.DataColumn("RTRFfolderName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRTRFfolderName);
                this.columnIsFC = new global::System.Data.DataColumn("IsFC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFC);
                this.columnIsDWSExist = new global::System.Data.DataColumn("IsDWSExist", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDWSExist);
                this.columnCWCellColXToConnectDW = new global::System.Data.DataColumn("CWCellColXToConnectDW", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCWCellColXToConnectDW);
                this.columnCWCellRowYToConnectDW = new global::System.Data.DataColumn("CWCellRowYToConnectDW", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCWCellRowYToConnectDW);
                this.columnDWCellColXToConnectCW = new global::System.Data.DataColumn("DWCellColXToConnectCW", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWCellColXToConnectCW);
                this.columnDWCellRowYToConnectCW = new global::System.Data.DataColumn("DWCellRowYToConnectCW", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDWCellRowYToConnectCW);
                this.columnRFInterval_min = new global::System.Data.DataColumn("RFInterval_min", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFInterval_min);
                this.columnOutputInterval_min = new global::System.Data.DataColumn("OutputInterval_min", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputInterval_min);
                this.columnRTstartingTime = new global::System.Data.DataColumn("RTstartingTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRTstartingTime);
                this.columnCWCellColXToConnectDW.Caption = "CWSSCVIDtoConnectWithDWSS";
                this.columnDWCellColXToConnectCW.Caption = "DWSSCVIDtoConnectWithUWSS";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RTenvRow NewRTenvRow() {
                return ((RTenvRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RTenvRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RTenvRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RTenvRowChanged != null)) {
                    this.RTenvRowChanged(this, new RTenvRowChangeEvent(((RTenvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RTenvRowChanging != null)) {
                    this.RTenvRowChanging(this, new RTenvRowChangeEvent(((RTenvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RTenvRowDeleted != null)) {
                    this.RTenvRowDeleted(this, new RTenvRowChangeEvent(((RTenvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RTenvRowDeleting != null)) {
                    this.RTenvRowDeleting(this, new RTenvRowChangeEvent(((RTenvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveRTenvRow(RTenvRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GRMProject ds = new GRMProject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RTenvDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubWatershedSettingsDataTable : global::System.Data.TypedTableBase<SubWatershedSettingsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIniSaturation;
            
            private global::System.Data.DataColumn columnMinSlopeOF;
            
            private global::System.Data.DataColumn columnUnsaturatedKType;
            
            private global::System.Data.DataColumn columnCoefUnsaturatedK;
            
            private global::System.Data.DataColumn columnMinSlopeChBed;
            
            private global::System.Data.DataColumn columnMinChBaseWidth;
            
            private global::System.Data.DataColumn columnChRoughness;
            
            private global::System.Data.DataColumn columnDryStreamOrder;
            
            private global::System.Data.DataColumn columnIniFlow;
            
            private global::System.Data.DataColumn columnCalCoefLCRoughness;
            
            private global::System.Data.DataColumn columnCalCoefPorosity;
            
            private global::System.Data.DataColumn columnCalCoefWFSuctionHead;
            
            private global::System.Data.DataColumn columnCalCoefHydraulicK;
            
            private global::System.Data.DataColumn columnCalCoefSoilDepth;
            
            private global::System.Data.DataColumn columnUserSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SubWatershedSettingsDataTable() {
                this.TableName = "SubWatershedSettings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SubWatershedSettingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected SubWatershedSettingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IniSaturationColumn {
                get {
                    return this.columnIniSaturation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MinSlopeOFColumn {
                get {
                    return this.columnMinSlopeOF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnsaturatedKTypeColumn {
                get {
                    return this.columnUnsaturatedKType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CoefUnsaturatedKColumn {
                get {
                    return this.columnCoefUnsaturatedK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MinSlopeChBedColumn {
                get {
                    return this.columnMinSlopeChBed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MinChBaseWidthColumn {
                get {
                    return this.columnMinChBaseWidth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ChRoughnessColumn {
                get {
                    return this.columnChRoughness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DryStreamOrderColumn {
                get {
                    return this.columnDryStreamOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IniFlowColumn {
                get {
                    return this.columnIniFlow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CalCoefLCRoughnessColumn {
                get {
                    return this.columnCalCoefLCRoughness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CalCoefPorosityColumn {
                get {
                    return this.columnCalCoefPorosity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CalCoefWFSuctionHeadColumn {
                get {
                    return this.columnCalCoefWFSuctionHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CalCoefHydraulicKColumn {
                get {
                    return this.columnCalCoefHydraulicK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CalCoefSoilDepthColumn {
                get {
                    return this.columnCalCoefSoilDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UserSetColumn {
                get {
                    return this.columnUserSet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SubWatershedSettingsRow this[int index] {
                get {
                    return ((SubWatershedSettingsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SubWatershedSettingsRowChangeEventHandler SubWatershedSettingsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SubWatershedSettingsRowChangeEventHandler SubWatershedSettingsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SubWatershedSettingsRowChangeEventHandler SubWatershedSettingsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SubWatershedSettingsRowChangeEventHandler SubWatershedSettingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddSubWatershedSettingsRow(SubWatershedSettingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SubWatershedSettingsRow AddSubWatershedSettingsRow(
                        int ID, 
                        double IniSaturation, 
                        double MinSlopeOF, 
                        string UnsaturatedKType, 
                        string CoefUnsaturatedK, 
                        double MinSlopeChBed, 
                        double MinChBaseWidth, 
                        double ChRoughness, 
                        int DryStreamOrder, 
                        double IniFlow, 
                        double CalCoefLCRoughness, 
                        double CalCoefPorosity, 
                        double CalCoefWFSuctionHead, 
                        double CalCoefHydraulicK, 
                        double CalCoefSoilDepth, 
                        string UserSet) {
                SubWatershedSettingsRow rowSubWatershedSettingsRow = ((SubWatershedSettingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        IniSaturation,
                        MinSlopeOF,
                        UnsaturatedKType,
                        CoefUnsaturatedK,
                        MinSlopeChBed,
                        MinChBaseWidth,
                        ChRoughness,
                        DryStreamOrder,
                        IniFlow,
                        CalCoefLCRoughness,
                        CalCoefPorosity,
                        CalCoefWFSuctionHead,
                        CalCoefHydraulicK,
                        CalCoefSoilDepth,
                        UserSet};
                rowSubWatershedSettingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubWatershedSettingsRow);
                return rowSubWatershedSettingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SubWatershedSettingsDataTable cln = ((SubWatershedSettingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubWatershedSettingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIniSaturation = base.Columns["IniSaturation"];
                this.columnMinSlopeOF = base.Columns["MinSlopeOF"];
                this.columnUnsaturatedKType = base.Columns["UnsaturatedKType"];
                this.columnCoefUnsaturatedK = base.Columns["CoefUnsaturatedK"];
                this.columnMinSlopeChBed = base.Columns["MinSlopeChBed"];
                this.columnMinChBaseWidth = base.Columns["MinChBaseWidth"];
                this.columnChRoughness = base.Columns["ChRoughness"];
                this.columnDryStreamOrder = base.Columns["DryStreamOrder"];
                this.columnIniFlow = base.Columns["IniFlow"];
                this.columnCalCoefLCRoughness = base.Columns["CalCoefLCRoughness"];
                this.columnCalCoefPorosity = base.Columns["CalCoefPorosity"];
                this.columnCalCoefWFSuctionHead = base.Columns["CalCoefWFSuctionHead"];
                this.columnCalCoefHydraulicK = base.Columns["CalCoefHydraulicK"];
                this.columnCalCoefSoilDepth = base.Columns["CalCoefSoilDepth"];
                this.columnUserSet = base.Columns["UserSet"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIniSaturation = new global::System.Data.DataColumn("IniSaturation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIniSaturation);
                this.columnMinSlopeOF = new global::System.Data.DataColumn("MinSlopeOF", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinSlopeOF);
                this.columnUnsaturatedKType = new global::System.Data.DataColumn("UnsaturatedKType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsaturatedKType);
                this.columnCoefUnsaturatedK = new global::System.Data.DataColumn("CoefUnsaturatedK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoefUnsaturatedK);
                this.columnMinSlopeChBed = new global::System.Data.DataColumn("MinSlopeChBed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinSlopeChBed);
                this.columnMinChBaseWidth = new global::System.Data.DataColumn("MinChBaseWidth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinChBaseWidth);
                this.columnChRoughness = new global::System.Data.DataColumn("ChRoughness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChRoughness);
                this.columnDryStreamOrder = new global::System.Data.DataColumn("DryStreamOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDryStreamOrder);
                this.columnIniFlow = new global::System.Data.DataColumn("IniFlow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIniFlow);
                this.columnCalCoefLCRoughness = new global::System.Data.DataColumn("CalCoefLCRoughness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalCoefLCRoughness);
                this.columnCalCoefPorosity = new global::System.Data.DataColumn("CalCoefPorosity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalCoefPorosity);
                this.columnCalCoefWFSuctionHead = new global::System.Data.DataColumn("CalCoefWFSuctionHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalCoefWFSuctionHead);
                this.columnCalCoefHydraulicK = new global::System.Data.DataColumn("CalCoefHydraulicK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalCoefHydraulicK);
                this.columnCalCoefSoilDepth = new global::System.Data.DataColumn("CalCoefSoilDepth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalCoefSoilDepth);
                this.columnUserSet = new global::System.Data.DataColumn("UserSet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserSet);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("WatershedSettingsKey1", new global::System.Data.DataColumn[] {
                                this.columnID}, false));
                this.columnID.Unique = true;
                this.columnIniSaturation.AllowDBNull = false;
                this.columnUnsaturatedKType.Caption = "CalCoefUnSaturatedK";
                this.columnCoefUnsaturatedK.Caption = "CalCoefUnSaturatedK";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SubWatershedSettingsRow NewSubWatershedSettingsRow() {
                return ((SubWatershedSettingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubWatershedSettingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SubWatershedSettingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubWatershedSettingsRowChanged != null)) {
                    this.SubWatershedSettingsRowChanged(this, new SubWatershedSettingsRowChangeEvent(((SubWatershedSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubWatershedSettingsRowChanging != null)) {
                    this.SubWatershedSettingsRowChanging(this, new SubWatershedSettingsRowChangeEvent(((SubWatershedSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubWatershedSettingsRowDeleted != null)) {
                    this.SubWatershedSettingsRowDeleted(this, new SubWatershedSettingsRowChangeEvent(((SubWatershedSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubWatershedSettingsRowDeleting != null)) {
                    this.SubWatershedSettingsRowDeleting(this, new SubWatershedSettingsRowChangeEvent(((SubWatershedSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveSubWatershedSettingsRow(SubWatershedSettingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GRMProject ds = new GRMProject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubWatershedSettingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WatchPointsDataTable : global::System.Data.TypedTableBase<WatchPointsRow> {
            
            private global::System.Data.DataColumn columnCVID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnColX;
            
            private global::System.Data.DataColumn columnRowY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WatchPointsDataTable() {
                this.TableName = "WatchPoints";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WatchPointsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected WatchPointsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CVIDColumn {
                get {
                    return this.columnCVID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ColXColumn {
                get {
                    return this.columnColX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RowYColumn {
                get {
                    return this.columnRowY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WatchPointsRow this[int index] {
                get {
                    return ((WatchPointsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WatchPointsRowChangeEventHandler WatchPointsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WatchPointsRowChangeEventHandler WatchPointsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WatchPointsRowChangeEventHandler WatchPointsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event WatchPointsRowChangeEventHandler WatchPointsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddWatchPointsRow(WatchPointsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WatchPointsRow AddWatchPointsRow(int CVID, string Name, int ColX, int RowY) {
                WatchPointsRow rowWatchPointsRow = ((WatchPointsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CVID,
                        Name,
                        ColX,
                        RowY};
                rowWatchPointsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWatchPointsRow);
                return rowWatchPointsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WatchPointsDataTable cln = ((WatchPointsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WatchPointsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnCVID = base.Columns["CVID"];
                this.columnName = base.Columns["Name"];
                this.columnColX = base.Columns["ColX"];
                this.columnRowY = base.Columns["RowY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnCVID = new global::System.Data.DataColumn("CVID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCVID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnColX = new global::System.Data.DataColumn("ColX", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColX);
                this.columnRowY = new global::System.Data.DataColumn("RowY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowY);
                this.columnName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WatchPointsRow NewWatchPointsRow() {
                return ((WatchPointsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WatchPointsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WatchPointsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WatchPointsRowChanged != null)) {
                    this.WatchPointsRowChanged(this, new WatchPointsRowChangeEvent(((WatchPointsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WatchPointsRowChanging != null)) {
                    this.WatchPointsRowChanging(this, new WatchPointsRowChangeEvent(((WatchPointsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WatchPointsRowDeleted != null)) {
                    this.WatchPointsRowDeleted(this, new WatchPointsRowChangeEvent(((WatchPointsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WatchPointsRowDeleting != null)) {
                    this.WatchPointsRowDeleting(this, new WatchPointsRowChangeEvent(((WatchPointsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveWatchPointsRow(WatchPointsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GRMProject ds = new GRMProject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WatchPointsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FlowControlGridDataTable : global::System.Data.TypedTableBase<FlowControlGridRow> {
            
            private global::System.Data.DataColumn columnCVID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnColX;
            
            private global::System.Data.DataColumn columnRowY;
            
            private global::System.Data.DataColumn columnControlType;
            
            private global::System.Data.DataColumn columnDT;
            
            private global::System.Data.DataColumn columnFlowDataFile;
            
            private global::System.Data.DataColumn columnIniStorage;
            
            private global::System.Data.DataColumn columnMaxStorage;
            
            private global::System.Data.DataColumn columnMaxStorageR;
            
            private global::System.Data.DataColumn columnROType;
            
            private global::System.Data.DataColumn columnROConstQ;
            
            private global::System.Data.DataColumn columnROConstQDuration;
            
            private global::System.Data.DataColumn columnROSDEqA;
            
            private global::System.Data.DataColumn columnROSDEqB;
            
            private global::System.Data.DataColumn columnROSDEqC;
            
            private global::System.Data.DataColumn columnROSDEqD;
            
            private global::System.Data.DataColumn columnROSDEqE;
            
            private global::System.Data.DataColumn columnROSDEqF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FlowControlGridDataTable() {
                this.TableName = "FlowControlGrid";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal FlowControlGridDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected FlowControlGridDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CVIDColumn {
                get {
                    return this.columnCVID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ColXColumn {
                get {
                    return this.columnColX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RowYColumn {
                get {
                    return this.columnRowY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ControlTypeColumn {
                get {
                    return this.columnControlType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DTColumn {
                get {
                    return this.columnDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FlowDataFileColumn {
                get {
                    return this.columnFlowDataFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IniStorageColumn {
                get {
                    return this.columnIniStorage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxStorageColumn {
                get {
                    return this.columnMaxStorage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxStorageRColumn {
                get {
                    return this.columnMaxStorageR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROTypeColumn {
                get {
                    return this.columnROType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROConstQColumn {
                get {
                    return this.columnROConstQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROConstQDurationColumn {
                get {
                    return this.columnROConstQDuration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROSDEqAColumn {
                get {
                    return this.columnROSDEqA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROSDEqBColumn {
                get {
                    return this.columnROSDEqB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROSDEqCColumn {
                get {
                    return this.columnROSDEqC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROSDEqDColumn {
                get {
                    return this.columnROSDEqD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROSDEqEColumn {
                get {
                    return this.columnROSDEqE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ROSDEqFColumn {
                get {
                    return this.columnROSDEqF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FlowControlGridRow this[int index] {
                get {
                    return ((FlowControlGridRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FlowControlGridRowChangeEventHandler FlowControlGridRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FlowControlGridRowChangeEventHandler FlowControlGridRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FlowControlGridRowChangeEventHandler FlowControlGridRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event FlowControlGridRowChangeEventHandler FlowControlGridRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddFlowControlGridRow(FlowControlGridRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FlowControlGridRow AddFlowControlGridRow(
                        int CVID, 
                        string Name, 
                        int ColX, 
                        int RowY, 
                        string ControlType, 
                        string DT, 
                        string FlowDataFile, 
                        string IniStorage, 
                        string MaxStorage, 
                        string MaxStorageR, 
                        string ROType, 
                        string ROConstQ, 
                        string ROConstQDuration, 
                        float ROSDEqA, 
                        float ROSDEqB, 
                        float ROSDEqC, 
                        float ROSDEqD, 
                        float ROSDEqE, 
                        float ROSDEqF) {
                FlowControlGridRow rowFlowControlGridRow = ((FlowControlGridRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CVID,
                        Name,
                        ColX,
                        RowY,
                        ControlType,
                        DT,
                        FlowDataFile,
                        IniStorage,
                        MaxStorage,
                        MaxStorageR,
                        ROType,
                        ROConstQ,
                        ROConstQDuration,
                        ROSDEqA,
                        ROSDEqB,
                        ROSDEqC,
                        ROSDEqD,
                        ROSDEqE,
                        ROSDEqF};
                rowFlowControlGridRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFlowControlGridRow);
                return rowFlowControlGridRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FlowControlGridDataTable cln = ((FlowControlGridDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FlowControlGridDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnCVID = base.Columns["CVID"];
                this.columnName = base.Columns["Name"];
                this.columnColX = base.Columns["ColX"];
                this.columnRowY = base.Columns["RowY"];
                this.columnControlType = base.Columns["ControlType"];
                this.columnDT = base.Columns["DT"];
                this.columnFlowDataFile = base.Columns["FlowDataFile"];
                this.columnIniStorage = base.Columns["IniStorage"];
                this.columnMaxStorage = base.Columns["MaxStorage"];
                this.columnMaxStorageR = base.Columns["MaxStorageR"];
                this.columnROType = base.Columns["ROType"];
                this.columnROConstQ = base.Columns["ROConstQ"];
                this.columnROConstQDuration = base.Columns["ROConstQDuration"];
                this.columnROSDEqA = base.Columns["ROSDEqA"];
                this.columnROSDEqB = base.Columns["ROSDEqB"];
                this.columnROSDEqC = base.Columns["ROSDEqC"];
                this.columnROSDEqD = base.Columns["ROSDEqD"];
                this.columnROSDEqE = base.Columns["ROSDEqE"];
                this.columnROSDEqF = base.Columns["ROSDEqF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnCVID = new global::System.Data.DataColumn("CVID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCVID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnColX = new global::System.Data.DataColumn("ColX", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColX);
                this.columnRowY = new global::System.Data.DataColumn("RowY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowY);
                this.columnControlType = new global::System.Data.DataColumn("ControlType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnControlType);
                this.columnDT = new global::System.Data.DataColumn("DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDT);
                this.columnFlowDataFile = new global::System.Data.DataColumn("FlowDataFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowDataFile);
                this.columnIniStorage = new global::System.Data.DataColumn("IniStorage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIniStorage);
                this.columnMaxStorage = new global::System.Data.DataColumn("MaxStorage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxStorage);
                this.columnMaxStorageR = new global::System.Data.DataColumn("MaxStorageR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxStorageR);
                this.columnROType = new global::System.Data.DataColumn("ROType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROType);
                this.columnROConstQ = new global::System.Data.DataColumn("ROConstQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROConstQ);
                this.columnROConstQDuration = new global::System.Data.DataColumn("ROConstQDuration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROConstQDuration);
                this.columnROSDEqA = new global::System.Data.DataColumn("ROSDEqA", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROSDEqA);
                this.columnROSDEqB = new global::System.Data.DataColumn("ROSDEqB", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROSDEqB);
                this.columnROSDEqC = new global::System.Data.DataColumn("ROSDEqC", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROSDEqC);
                this.columnROSDEqD = new global::System.Data.DataColumn("ROSDEqD", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROSDEqD);
                this.columnROSDEqE = new global::System.Data.DataColumn("ROSDEqE", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROSDEqE);
                this.columnROSDEqF = new global::System.Data.DataColumn("ROSDEqF", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROSDEqF);
                this.columnName.MaxLength = 50;
                this.columnControlType.MaxLength = 50;
                this.columnFlowDataFile.MaxLength = 536870910;
                this.columnROType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FlowControlGridRow NewFlowControlGridRow() {
                return ((FlowControlGridRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FlowControlGridRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FlowControlGridRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FlowControlGridRowChanged != null)) {
                    this.FlowControlGridRowChanged(this, new FlowControlGridRowChangeEvent(((FlowControlGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FlowControlGridRowChanging != null)) {
                    this.FlowControlGridRowChanging(this, new FlowControlGridRowChangeEvent(((FlowControlGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FlowControlGridRowDeleted != null)) {
                    this.FlowControlGridRowDeleted(this, new FlowControlGridRowChangeEvent(((FlowControlGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FlowControlGridRowDeleting != null)) {
                    this.FlowControlGridRowDeleting(this, new FlowControlGridRowChangeEvent(((FlowControlGridRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveFlowControlGridRow(FlowControlGridRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GRMProject ds = new GRMProject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FlowControlGridDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GreenAmptParameterDataTable : global::System.Data.TypedTableBase<GreenAmptParameterRow> {
            
            private global::System.Data.DataColumn columnGridValue;
            
            private global::System.Data.DataColumn columnUSERSoil;
            
            private global::System.Data.DataColumn columnGRMCode;
            
            private global::System.Data.DataColumn columnPorosity;
            
            private global::System.Data.DataColumn columnEffectivePorosity;
            
            private global::System.Data.DataColumn columnWFSoilSuctionHead;
            
            private global::System.Data.DataColumn columnHydraulicConductivity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public GreenAmptParameterDataTable() {
                this.TableName = "GreenAmptParameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal GreenAmptParameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected GreenAmptParameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GridValueColumn {
                get {
                    return this.columnGridValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn USERSoilColumn {
                get {
                    return this.columnUSERSoil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GRMCodeColumn {
                get {
                    return this.columnGRMCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PorosityColumn {
                get {
                    return this.columnPorosity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EffectivePorosityColumn {
                get {
                    return this.columnEffectivePorosity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WFSoilSuctionHeadColumn {
                get {
                    return this.columnWFSoilSuctionHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HydraulicConductivityColumn {
                get {
                    return this.columnHydraulicConductivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public GreenAmptParameterRow this[int index] {
                get {
                    return ((GreenAmptParameterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event GreenAmptParameterRowChangeEventHandler GreenAmptParameterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event GreenAmptParameterRowChangeEventHandler GreenAmptParameterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event GreenAmptParameterRowChangeEventHandler GreenAmptParameterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event GreenAmptParameterRowChangeEventHandler GreenAmptParameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddGreenAmptParameterRow(GreenAmptParameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public GreenAmptParameterRow AddGreenAmptParameterRow(int GridValue, string USERSoil, string GRMCode, double Porosity, double EffectivePorosity, double WFSoilSuctionHead, double HydraulicConductivity) {
                GreenAmptParameterRow rowGreenAmptParameterRow = ((GreenAmptParameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GridValue,
                        USERSoil,
                        GRMCode,
                        Porosity,
                        EffectivePorosity,
                        WFSoilSuctionHead,
                        HydraulicConductivity};
                rowGreenAmptParameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGreenAmptParameterRow);
                return rowGreenAmptParameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GreenAmptParameterDataTable cln = ((GreenAmptParameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GreenAmptParameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnGridValue = base.Columns["GridValue"];
                this.columnUSERSoil = base.Columns["USERSoil"];
                this.columnGRMCode = base.Columns["GRMCode"];
                this.columnPorosity = base.Columns["Porosity"];
                this.columnEffectivePorosity = base.Columns["EffectivePorosity"];
                this.columnWFSoilSuctionHead = base.Columns["WFSoilSuctionHead"];
                this.columnHydraulicConductivity = base.Columns["HydraulicConductivity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnGridValue = new global::System.Data.DataColumn("GridValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridValue);
                this.columnUSERSoil = new global::System.Data.DataColumn("USERSoil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERSoil);
                this.columnGRMCode = new global::System.Data.DataColumn("GRMCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRMCode);
                this.columnPorosity = new global::System.Data.DataColumn("Porosity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPorosity);
                this.columnEffectivePorosity = new global::System.Data.DataColumn("EffectivePorosity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectivePorosity);
                this.columnWFSoilSuctionHead = new global::System.Data.DataColumn("WFSoilSuctionHead", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWFSoilSuctionHead);
                this.columnHydraulicConductivity = new global::System.Data.DataColumn("HydraulicConductivity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHydraulicConductivity);
                this.columnUSERSoil.MaxLength = 50;
                this.columnGRMCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public GreenAmptParameterRow NewGreenAmptParameterRow() {
                return ((GreenAmptParameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GreenAmptParameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GreenAmptParameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GreenAmptParameterRowChanged != null)) {
                    this.GreenAmptParameterRowChanged(this, new GreenAmptParameterRowChangeEvent(((GreenAmptParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GreenAmptParameterRowChanging != null)) {
                    this.GreenAmptParameterRowChanging(this, new GreenAmptParameterRowChangeEvent(((GreenAmptParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GreenAmptParameterRowDeleted != null)) {
                    this.GreenAmptParameterRowDeleted(this, new GreenAmptParameterRowChangeEvent(((GreenAmptParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GreenAmptParameterRowDeleting != null)) {
                    this.GreenAmptParameterRowDeleting(this, new GreenAmptParameterRowChangeEvent(((GreenAmptParameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveGreenAmptParameterRow(GreenAmptParameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GRMProject ds = new GRMProject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GreenAmptParameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SoilDepthDataTable : global::System.Data.TypedTableBase<SoilDepthRow> {
            
            private global::System.Data.DataColumn columnGridValue;
            
            private global::System.Data.DataColumn columnUserDepthClass;
            
            private global::System.Data.DataColumn columnGRMCode;
            
            private global::System.Data.DataColumn columnSoilDepth;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SoilDepthDataTable() {
                this.TableName = "SoilDepth";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SoilDepthDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected SoilDepthDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GridValueColumn {
                get {
                    return this.columnGridValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UserDepthClassColumn {
                get {
                    return this.columnUserDepthClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GRMCodeColumn {
                get {
                    return this.columnGRMCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SoilDepthColumn {
                get {
                    return this.columnSoilDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SoilDepthRow this[int index] {
                get {
                    return ((SoilDepthRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SoilDepthRowChangeEventHandler SoilDepthRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SoilDepthRowChangeEventHandler SoilDepthRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SoilDepthRowChangeEventHandler SoilDepthRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SoilDepthRowChangeEventHandler SoilDepthRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddSoilDepthRow(SoilDepthRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SoilDepthRow AddSoilDepthRow(int GridValue, string UserDepthClass, string GRMCode, float SoilDepth) {
                SoilDepthRow rowSoilDepthRow = ((SoilDepthRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GridValue,
                        UserDepthClass,
                        GRMCode,
                        SoilDepth};
                rowSoilDepthRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSoilDepthRow);
                return rowSoilDepthRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SoilDepthDataTable cln = ((SoilDepthDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SoilDepthDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnGridValue = base.Columns["GridValue"];
                this.columnUserDepthClass = base.Columns["UserDepthClass"];
                this.columnGRMCode = base.Columns["GRMCode"];
                this.columnSoilDepth = base.Columns["SoilDepth"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnGridValue = new global::System.Data.DataColumn("GridValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridValue);
                this.columnUserDepthClass = new global::System.Data.DataColumn("UserDepthClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserDepthClass);
                this.columnGRMCode = new global::System.Data.DataColumn("GRMCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRMCode);
                this.columnSoilDepth = new global::System.Data.DataColumn("SoilDepth", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoilDepth);
                this.columnUserDepthClass.MaxLength = 50;
                this.columnGRMCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SoilDepthRow NewSoilDepthRow() {
                return ((SoilDepthRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SoilDepthRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SoilDepthRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SoilDepthRowChanged != null)) {
                    this.SoilDepthRowChanged(this, new SoilDepthRowChangeEvent(((SoilDepthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SoilDepthRowChanging != null)) {
                    this.SoilDepthRowChanging(this, new SoilDepthRowChangeEvent(((SoilDepthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SoilDepthRowDeleted != null)) {
                    this.SoilDepthRowDeleted(this, new SoilDepthRowChangeEvent(((SoilDepthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SoilDepthRowDeleting != null)) {
                    this.SoilDepthRowDeleting(this, new SoilDepthRowChangeEvent(((SoilDepthRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveSoilDepthRow(SoilDepthRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GRMProject ds = new GRMProject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SoilDepthDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LandCoverDataTable : global::System.Data.TypedTableBase<LandCoverRow> {
            
            private global::System.Data.DataColumn columnGridValue;
            
            private global::System.Data.DataColumn columnUserLandCover;
            
            private global::System.Data.DataColumn columnGRMCode;
            
            private global::System.Data.DataColumn columnRoughnessCoefficient;
            
            private global::System.Data.DataColumn columnImperviousRatio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LandCoverDataTable() {
                this.TableName = "LandCover";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal LandCoverDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected LandCoverDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GridValueColumn {
                get {
                    return this.columnGridValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UserLandCoverColumn {
                get {
                    return this.columnUserLandCover;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GRMCodeColumn {
                get {
                    return this.columnGRMCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RoughnessCoefficientColumn {
                get {
                    return this.columnRoughnessCoefficient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ImperviousRatioColumn {
                get {
                    return this.columnImperviousRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LandCoverRow this[int index] {
                get {
                    return ((LandCoverRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LandCoverRowChangeEventHandler LandCoverRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LandCoverRowChangeEventHandler LandCoverRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LandCoverRowChangeEventHandler LandCoverRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LandCoverRowChangeEventHandler LandCoverRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddLandCoverRow(LandCoverRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LandCoverRow AddLandCoverRow(int GridValue, string UserLandCover, string GRMCode, float RoughnessCoefficient, float ImperviousRatio) {
                LandCoverRow rowLandCoverRow = ((LandCoverRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GridValue,
                        UserLandCover,
                        GRMCode,
                        RoughnessCoefficient,
                        ImperviousRatio};
                rowLandCoverRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLandCoverRow);
                return rowLandCoverRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LandCoverDataTable cln = ((LandCoverDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LandCoverDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnGridValue = base.Columns["GridValue"];
                this.columnUserLandCover = base.Columns["UserLandCover"];
                this.columnGRMCode = base.Columns["GRMCode"];
                this.columnRoughnessCoefficient = base.Columns["RoughnessCoefficient"];
                this.columnImperviousRatio = base.Columns["ImperviousRatio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnGridValue = new global::System.Data.DataColumn("GridValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridValue);
                this.columnUserLandCover = new global::System.Data.DataColumn("UserLandCover", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserLandCover);
                this.columnGRMCode = new global::System.Data.DataColumn("GRMCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRMCode);
                this.columnRoughnessCoefficient = new global::System.Data.DataColumn("RoughnessCoefficient", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoughnessCoefficient);
                this.columnImperviousRatio = new global::System.Data.DataColumn("ImperviousRatio", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImperviousRatio);
                this.columnUserLandCover.MaxLength = 50;
                this.columnGRMCode.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LandCoverRow NewLandCoverRow() {
                return ((LandCoverRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LandCoverRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LandCoverRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LandCoverRowChanged != null)) {
                    this.LandCoverRowChanged(this, new LandCoverRowChangeEvent(((LandCoverRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LandCoverRowChanging != null)) {
                    this.LandCoverRowChanging(this, new LandCoverRowChangeEvent(((LandCoverRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LandCoverRowDeleted != null)) {
                    this.LandCoverRowDeleted(this, new LandCoverRowChangeEvent(((LandCoverRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LandCoverRowDeleting != null)) {
                    this.LandCoverRowDeleting(this, new LandCoverRowChangeEvent(((LandCoverRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveLandCoverRow(LandCoverRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GRMProject ds = new GRMProject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LandCoverDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProjectSettingsRow : global::System.Data.DataRow {
            
            private ProjectSettingsDataTable tableProjectSettings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ProjectSettingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProjectSettings = ((ProjectSettingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProjectFile {
                get {
                    return ((string)(this[this.tableProjectSettings.ProjectFileColumn]));
                }
                set {
                    this[this.tableProjectSettings.ProjectFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GRMSimulationType {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.GRMSimulationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'GRMSimulationType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.GRMSimulationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WatershedFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.WatershedFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'WatershedFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.WatershedFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SlopeFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SlopeFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SlopeFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SlopeFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FlowDirectionFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.FlowDirectionFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'FlowDirectionFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.FlowDirectionFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FlowAccumFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.FlowAccumFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'FlowAccumFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.FlowAccumFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string StreamFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.StreamFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'StreamFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.StreamFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ChannelWidthFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ChannelWidthFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ChannelWidthFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ChannelWidthFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LandCoverDataType {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.LandCoverDataTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'LandCoverDataType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.LandCoverDataTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LandCoverFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.LandCoverFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'LandCoverFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.LandCoverFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LandCoverVATFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.LandCoverVATFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'LandCoverVATFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.LandCoverVATFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConstantRoughnessCoeff {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ConstantRoughnessCoeffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ConstantRoughnessCoeff\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ConstantRoughnessCoeffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConstantImperviousRatio {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ConstantImperviousRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ConstantImperviousRatio\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ConstantImperviousRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SoilTextureDataType {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SoilTextureDataTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SoilTextureDataType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SoilTextureDataTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SoilTextureFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SoilTextureFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SoilTextureFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SoilTextureFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SoilTextureVATFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SoilTextureVATFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SoilTextureVATFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SoilTextureVATFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConstantSoilPorosity {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ConstantSoilPorosityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ConstantSoilPorosity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ConstantSoilPorosityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConstantSoilEffPorosity {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ConstantSoilEffPorosityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ConstantSoilEffPorosity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ConstantSoilEffPorosityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConstantSoilWettingFrontSuctionHead {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ConstantSoilWettingFrontSuctionHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ConstantSoilWettingFrontSuctionHead\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ConstantSoilWettingFrontSuctionHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConstantSoilHydraulicConductivity {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ConstantSoilHydraulicConductivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ConstantSoilHydraulicConductivity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ConstantSoilHydraulicConductivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SoilDepthDataType {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SoilDepthDataTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SoilDepthDataType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SoilDepthDataTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SoilDepthFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SoilDepthFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SoilDepthFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SoilDepthFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SoilDepthVATFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SoilDepthVATFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SoilDepthVATFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SoilDepthVATFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConstantSoilDepth {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ConstantSoilDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ConstantSoilDepth\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ConstantSoilDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InitialSoilSaturationRatioFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.InitialSoilSaturationRatioFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'InitialSoilSaturationRatioFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.InitialSoilSaturationRatioFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InitialChannelFlowFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.InitialChannelFlowFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'InitialChannelFlowFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.InitialChannelFlowFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RainfallDataType {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.RainfallDataTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'RainfallDataType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.RainfallDataTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RainfallInterval {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.RainfallIntervalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'RainfallInterval\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.RainfallIntervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RainfallDataFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.RainfallDataFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'RainfallDataFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.RainfallDataFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FlowDirectionType {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.FlowDirectionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'FlowDirectionType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.FlowDirectionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IsParallel {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.IsParallelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'IsParallel\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.IsParallelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MaxDegreeOfParallelism {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.MaxDegreeOfParallelismColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MaxDegreeOfParallelism\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MaxDegreeOfParallelismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SimulStartingTime {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SimulStartingTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SimulStartingTime\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SimulStartingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SimulationDuration {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SimulationDurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SimulationDuration\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SimulationDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ComputationalTimeStep {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ComputationalTimeStepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ComputationalTimeStep\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ComputationalTimeStepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IsFixedTimeStep {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.IsFixedTimeStepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'IsFixedTimeStep\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.IsFixedTimeStepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OutputTimeStep {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.OutputTimeStepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'OutputTimeStep\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.OutputTimeStepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CrossSectionType {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.CrossSectionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'CrossSectionType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.CrossSectionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SingleCSChannelWidthType {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SingleCSChannelWidthTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SingleCSChannelWidthType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SingleCSChannelWidthTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ChannelWidthEQc {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ChannelWidthEQcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ChannelWidthEQc\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ChannelWidthEQcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ChannelWidthEQd {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ChannelWidthEQdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ChannelWidthEQd\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ChannelWidthEQdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ChannelWidthEQe {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ChannelWidthEQeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ChannelWidthEQe\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ChannelWidthEQeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ChannelWidthMostDownStream {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ChannelWidthMostDownStreamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ChannelWidthMostDownStream\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ChannelWidthMostDownStreamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LowerRegionHeight {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.LowerRegionHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'LowerRegionHeight\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.LowerRegionHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LowerRegionBaseWidth {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.LowerRegionBaseWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'LowerRegionBaseWidth\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.LowerRegionBaseWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UpperRegionBaseWidth {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.UpperRegionBaseWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'UpperRegionBaseWidth\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.UpperRegionBaseWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CompoundCSChannelWidthLimit {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.CompoundCSChannelWidthLimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'CompoundCSChannelWidthLimit\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.CompoundCSChannelWidthLimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BankSideSlopeRight {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.BankSideSlopeRightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'BankSideSlopeRight\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.BankSideSlopeRightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BankSideSlopeLeft {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.BankSideSlopeLeftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'BankSideSlopeLeft\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.BankSideSlopeLeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SimulateInfiltration {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SimulateInfiltrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SimulateInfiltration\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SimulateInfiltrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SimulateSubsurfaceFlow {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SimulateSubsurfaceFlowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SimulateSubsurfaceFlow\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SimulateSubsurfaceFlowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SimulateBaseFlow {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SimulateBaseFlowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SimulateBaseFlow\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SimulateBaseFlowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SimulateFlowControl {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.SimulateFlowControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SimulateFlowControl\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SimulateFlowControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MakeIMGFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.MakeIMGFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MakeIMGFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MakeIMGFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MakeASCFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.MakeASCFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MakeASCFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MakeASCFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MakeSoilSaturationDistFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.MakeSoilSaturationDistFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MakeSoilSaturationDistFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MakeSoilSaturationDistFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MakeRfDistFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.MakeRfDistFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MakeRfDistFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MakeRfDistFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MakeRFaccDistFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.MakeRFaccDistFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MakeRFaccDistFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MakeRFaccDistFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MakeFlowDistFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.MakeFlowDistFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MakeFlowDistFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MakeFlowDistFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PrintOption {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.PrintOptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'PrintOption\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.PrintOptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WriteLog {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.WriteLogColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'WriteLog\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.WriteLogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AboutThisProject {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.AboutThisProjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'AboutThisProject\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.AboutThisProjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AboutWatershed {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.AboutWatershedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'AboutWatershed\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.AboutWatershedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AboutLandCoverMap {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.AboutLandCoverMapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'AboutLandCoverMap\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.AboutLandCoverMapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AboutSoilMap {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.AboutSoilMapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'AboutSoilMap\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.AboutSoilMapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AboutSoilDepthMap {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.AboutSoilDepthMapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'AboutSoilDepthMap\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.AboutSoilDepthMapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AboutRainfall {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.AboutRainfallColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'AboutRainfall\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.AboutRainfallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProjectSavedTime {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ProjectSavedTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ProjectSavedTime\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ProjectSavedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ComputerName {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ComputerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ComputerName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ComputerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ComputerUserName {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.ComputerUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'ComputerUserName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.ComputerUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GRMVersion {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.GRMVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'GRMVersion\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.GRMVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGRMSimulationTypeNull() {
                return this.IsNull(this.tableProjectSettings.GRMSimulationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGRMSimulationTypeNull() {
                this[this.tableProjectSettings.GRMSimulationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWatershedFileNull() {
                return this.IsNull(this.tableProjectSettings.WatershedFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWatershedFileNull() {
                this[this.tableProjectSettings.WatershedFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSlopeFileNull() {
                return this.IsNull(this.tableProjectSettings.SlopeFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSlopeFileNull() {
                this[this.tableProjectSettings.SlopeFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFlowDirectionFileNull() {
                return this.IsNull(this.tableProjectSettings.FlowDirectionFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFlowDirectionFileNull() {
                this[this.tableProjectSettings.FlowDirectionFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFlowAccumFileNull() {
                return this.IsNull(this.tableProjectSettings.FlowAccumFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFlowAccumFileNull() {
                this[this.tableProjectSettings.FlowAccumFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStreamFileNull() {
                return this.IsNull(this.tableProjectSettings.StreamFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStreamFileNull() {
                this[this.tableProjectSettings.StreamFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsChannelWidthFileNull() {
                return this.IsNull(this.tableProjectSettings.ChannelWidthFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetChannelWidthFileNull() {
                this[this.tableProjectSettings.ChannelWidthFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLandCoverDataTypeNull() {
                return this.IsNull(this.tableProjectSettings.LandCoverDataTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLandCoverDataTypeNull() {
                this[this.tableProjectSettings.LandCoverDataTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLandCoverFileNull() {
                return this.IsNull(this.tableProjectSettings.LandCoverFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLandCoverFileNull() {
                this[this.tableProjectSettings.LandCoverFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLandCoverVATFileNull() {
                return this.IsNull(this.tableProjectSettings.LandCoverVATFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLandCoverVATFileNull() {
                this[this.tableProjectSettings.LandCoverVATFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConstantRoughnessCoeffNull() {
                return this.IsNull(this.tableProjectSettings.ConstantRoughnessCoeffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConstantRoughnessCoeffNull() {
                this[this.tableProjectSettings.ConstantRoughnessCoeffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConstantImperviousRatioNull() {
                return this.IsNull(this.tableProjectSettings.ConstantImperviousRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConstantImperviousRatioNull() {
                this[this.tableProjectSettings.ConstantImperviousRatioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSoilTextureDataTypeNull() {
                return this.IsNull(this.tableProjectSettings.SoilTextureDataTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSoilTextureDataTypeNull() {
                this[this.tableProjectSettings.SoilTextureDataTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSoilTextureFileNull() {
                return this.IsNull(this.tableProjectSettings.SoilTextureFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSoilTextureFileNull() {
                this[this.tableProjectSettings.SoilTextureFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSoilTextureVATFileNull() {
                return this.IsNull(this.tableProjectSettings.SoilTextureVATFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSoilTextureVATFileNull() {
                this[this.tableProjectSettings.SoilTextureVATFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConstantSoilPorosityNull() {
                return this.IsNull(this.tableProjectSettings.ConstantSoilPorosityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConstantSoilPorosityNull() {
                this[this.tableProjectSettings.ConstantSoilPorosityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConstantSoilEffPorosityNull() {
                return this.IsNull(this.tableProjectSettings.ConstantSoilEffPorosityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConstantSoilEffPorosityNull() {
                this[this.tableProjectSettings.ConstantSoilEffPorosityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConstantSoilWettingFrontSuctionHeadNull() {
                return this.IsNull(this.tableProjectSettings.ConstantSoilWettingFrontSuctionHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConstantSoilWettingFrontSuctionHeadNull() {
                this[this.tableProjectSettings.ConstantSoilWettingFrontSuctionHeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConstantSoilHydraulicConductivityNull() {
                return this.IsNull(this.tableProjectSettings.ConstantSoilHydraulicConductivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConstantSoilHydraulicConductivityNull() {
                this[this.tableProjectSettings.ConstantSoilHydraulicConductivityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSoilDepthDataTypeNull() {
                return this.IsNull(this.tableProjectSettings.SoilDepthDataTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSoilDepthDataTypeNull() {
                this[this.tableProjectSettings.SoilDepthDataTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSoilDepthFileNull() {
                return this.IsNull(this.tableProjectSettings.SoilDepthFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSoilDepthFileNull() {
                this[this.tableProjectSettings.SoilDepthFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSoilDepthVATFileNull() {
                return this.IsNull(this.tableProjectSettings.SoilDepthVATFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSoilDepthVATFileNull() {
                this[this.tableProjectSettings.SoilDepthVATFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConstantSoilDepthNull() {
                return this.IsNull(this.tableProjectSettings.ConstantSoilDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConstantSoilDepthNull() {
                this[this.tableProjectSettings.ConstantSoilDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInitialSoilSaturationRatioFileNull() {
                return this.IsNull(this.tableProjectSettings.InitialSoilSaturationRatioFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInitialSoilSaturationRatioFileNull() {
                this[this.tableProjectSettings.InitialSoilSaturationRatioFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInitialChannelFlowFileNull() {
                return this.IsNull(this.tableProjectSettings.InitialChannelFlowFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInitialChannelFlowFileNull() {
                this[this.tableProjectSettings.InitialChannelFlowFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRainfallDataTypeNull() {
                return this.IsNull(this.tableProjectSettings.RainfallDataTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRainfallDataTypeNull() {
                this[this.tableProjectSettings.RainfallDataTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRainfallIntervalNull() {
                return this.IsNull(this.tableProjectSettings.RainfallIntervalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRainfallIntervalNull() {
                this[this.tableProjectSettings.RainfallIntervalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRainfallDataFileNull() {
                return this.IsNull(this.tableProjectSettings.RainfallDataFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRainfallDataFileNull() {
                this[this.tableProjectSettings.RainfallDataFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFlowDirectionTypeNull() {
                return this.IsNull(this.tableProjectSettings.FlowDirectionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFlowDirectionTypeNull() {
                this[this.tableProjectSettings.FlowDirectionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsParallelNull() {
                return this.IsNull(this.tableProjectSettings.IsParallelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsParallelNull() {
                this[this.tableProjectSettings.IsParallelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxDegreeOfParallelismNull() {
                return this.IsNull(this.tableProjectSettings.MaxDegreeOfParallelismColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxDegreeOfParallelismNull() {
                this[this.tableProjectSettings.MaxDegreeOfParallelismColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSimulStartingTimeNull() {
                return this.IsNull(this.tableProjectSettings.SimulStartingTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSimulStartingTimeNull() {
                this[this.tableProjectSettings.SimulStartingTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSimulationDurationNull() {
                return this.IsNull(this.tableProjectSettings.SimulationDurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSimulationDurationNull() {
                this[this.tableProjectSettings.SimulationDurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsComputationalTimeStepNull() {
                return this.IsNull(this.tableProjectSettings.ComputationalTimeStepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetComputationalTimeStepNull() {
                this[this.tableProjectSettings.ComputationalTimeStepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsFixedTimeStepNull() {
                return this.IsNull(this.tableProjectSettings.IsFixedTimeStepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsFixedTimeStepNull() {
                this[this.tableProjectSettings.IsFixedTimeStepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutputTimeStepNull() {
                return this.IsNull(this.tableProjectSettings.OutputTimeStepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutputTimeStepNull() {
                this[this.tableProjectSettings.OutputTimeStepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCrossSectionTypeNull() {
                return this.IsNull(this.tableProjectSettings.CrossSectionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCrossSectionTypeNull() {
                this[this.tableProjectSettings.CrossSectionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSingleCSChannelWidthTypeNull() {
                return this.IsNull(this.tableProjectSettings.SingleCSChannelWidthTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSingleCSChannelWidthTypeNull() {
                this[this.tableProjectSettings.SingleCSChannelWidthTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsChannelWidthEQcNull() {
                return this.IsNull(this.tableProjectSettings.ChannelWidthEQcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetChannelWidthEQcNull() {
                this[this.tableProjectSettings.ChannelWidthEQcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsChannelWidthEQdNull() {
                return this.IsNull(this.tableProjectSettings.ChannelWidthEQdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetChannelWidthEQdNull() {
                this[this.tableProjectSettings.ChannelWidthEQdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsChannelWidthEQeNull() {
                return this.IsNull(this.tableProjectSettings.ChannelWidthEQeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetChannelWidthEQeNull() {
                this[this.tableProjectSettings.ChannelWidthEQeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsChannelWidthMostDownStreamNull() {
                return this.IsNull(this.tableProjectSettings.ChannelWidthMostDownStreamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetChannelWidthMostDownStreamNull() {
                this[this.tableProjectSettings.ChannelWidthMostDownStreamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLowerRegionHeightNull() {
                return this.IsNull(this.tableProjectSettings.LowerRegionHeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLowerRegionHeightNull() {
                this[this.tableProjectSettings.LowerRegionHeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLowerRegionBaseWidthNull() {
                return this.IsNull(this.tableProjectSettings.LowerRegionBaseWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLowerRegionBaseWidthNull() {
                this[this.tableProjectSettings.LowerRegionBaseWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUpperRegionBaseWidthNull() {
                return this.IsNull(this.tableProjectSettings.UpperRegionBaseWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUpperRegionBaseWidthNull() {
                this[this.tableProjectSettings.UpperRegionBaseWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCompoundCSChannelWidthLimitNull() {
                return this.IsNull(this.tableProjectSettings.CompoundCSChannelWidthLimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCompoundCSChannelWidthLimitNull() {
                this[this.tableProjectSettings.CompoundCSChannelWidthLimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBankSideSlopeRightNull() {
                return this.IsNull(this.tableProjectSettings.BankSideSlopeRightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBankSideSlopeRightNull() {
                this[this.tableProjectSettings.BankSideSlopeRightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBankSideSlopeLeftNull() {
                return this.IsNull(this.tableProjectSettings.BankSideSlopeLeftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBankSideSlopeLeftNull() {
                this[this.tableProjectSettings.BankSideSlopeLeftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSimulateInfiltrationNull() {
                return this.IsNull(this.tableProjectSettings.SimulateInfiltrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSimulateInfiltrationNull() {
                this[this.tableProjectSettings.SimulateInfiltrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSimulateSubsurfaceFlowNull() {
                return this.IsNull(this.tableProjectSettings.SimulateSubsurfaceFlowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSimulateSubsurfaceFlowNull() {
                this[this.tableProjectSettings.SimulateSubsurfaceFlowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSimulateBaseFlowNull() {
                return this.IsNull(this.tableProjectSettings.SimulateBaseFlowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSimulateBaseFlowNull() {
                this[this.tableProjectSettings.SimulateBaseFlowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSimulateFlowControlNull() {
                return this.IsNull(this.tableProjectSettings.SimulateFlowControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSimulateFlowControlNull() {
                this[this.tableProjectSettings.SimulateFlowControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMakeIMGFileNull() {
                return this.IsNull(this.tableProjectSettings.MakeIMGFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMakeIMGFileNull() {
                this[this.tableProjectSettings.MakeIMGFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMakeASCFileNull() {
                return this.IsNull(this.tableProjectSettings.MakeASCFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMakeASCFileNull() {
                this[this.tableProjectSettings.MakeASCFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMakeSoilSaturationDistFileNull() {
                return this.IsNull(this.tableProjectSettings.MakeSoilSaturationDistFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMakeSoilSaturationDistFileNull() {
                this[this.tableProjectSettings.MakeSoilSaturationDistFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMakeRfDistFileNull() {
                return this.IsNull(this.tableProjectSettings.MakeRfDistFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMakeRfDistFileNull() {
                this[this.tableProjectSettings.MakeRfDistFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMakeRFaccDistFileNull() {
                return this.IsNull(this.tableProjectSettings.MakeRFaccDistFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMakeRFaccDistFileNull() {
                this[this.tableProjectSettings.MakeRFaccDistFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMakeFlowDistFileNull() {
                return this.IsNull(this.tableProjectSettings.MakeFlowDistFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMakeFlowDistFileNull() {
                this[this.tableProjectSettings.MakeFlowDistFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrintOptionNull() {
                return this.IsNull(this.tableProjectSettings.PrintOptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrintOptionNull() {
                this[this.tableProjectSettings.PrintOptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWriteLogNull() {
                return this.IsNull(this.tableProjectSettings.WriteLogColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWriteLogNull() {
                this[this.tableProjectSettings.WriteLogColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAboutThisProjectNull() {
                return this.IsNull(this.tableProjectSettings.AboutThisProjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAboutThisProjectNull() {
                this[this.tableProjectSettings.AboutThisProjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAboutWatershedNull() {
                return this.IsNull(this.tableProjectSettings.AboutWatershedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAboutWatershedNull() {
                this[this.tableProjectSettings.AboutWatershedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAboutLandCoverMapNull() {
                return this.IsNull(this.tableProjectSettings.AboutLandCoverMapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAboutLandCoverMapNull() {
                this[this.tableProjectSettings.AboutLandCoverMapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAboutSoilMapNull() {
                return this.IsNull(this.tableProjectSettings.AboutSoilMapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAboutSoilMapNull() {
                this[this.tableProjectSettings.AboutSoilMapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAboutSoilDepthMapNull() {
                return this.IsNull(this.tableProjectSettings.AboutSoilDepthMapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAboutSoilDepthMapNull() {
                this[this.tableProjectSettings.AboutSoilDepthMapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAboutRainfallNull() {
                return this.IsNull(this.tableProjectSettings.AboutRainfallColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAboutRainfallNull() {
                this[this.tableProjectSettings.AboutRainfallColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProjectSavedTimeNull() {
                return this.IsNull(this.tableProjectSettings.ProjectSavedTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProjectSavedTimeNull() {
                this[this.tableProjectSettings.ProjectSavedTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsComputerNameNull() {
                return this.IsNull(this.tableProjectSettings.ComputerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetComputerNameNull() {
                this[this.tableProjectSettings.ComputerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsComputerUserNameNull() {
                return this.IsNull(this.tableProjectSettings.ComputerUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetComputerUserNameNull() {
                this[this.tableProjectSettings.ComputerUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGRMVersionNull() {
                return this.IsNull(this.tableProjectSettings.GRMVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGRMVersionNull() {
                this[this.tableProjectSettings.GRMVersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RTenvRow : global::System.Data.DataRow {
            
            private RTenvDataTable tableRTenv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal RTenvRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRTenv = ((RTenvDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProjectFPN {
                get {
                    try {
                        return ((string)(this[this.tableRTenv.ProjectFPNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'ProjectFPN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.ProjectFPNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RTRFfolderName {
                get {
                    try {
                        return ((string)(this[this.tableRTenv.RTRFfolderNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'RTRFfolderName\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.RTRFfolderNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFC {
                get {
                    try {
                        return ((bool)(this[this.tableRTenv.IsFCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'IsFC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.IsFCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDWSExist {
                get {
                    try {
                        return ((bool)(this[this.tableRTenv.IsDWSExistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'IsDWSExist\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.IsDWSExistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int CWCellColXToConnectDW {
                get {
                    try {
                        return ((int)(this[this.tableRTenv.CWCellColXToConnectDWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'CWCellColXToConnectDW\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.CWCellColXToConnectDWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int CWCellRowYToConnectDW {
                get {
                    try {
                        return ((int)(this[this.tableRTenv.CWCellRowYToConnectDWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'CWCellRowYToConnectDW\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.CWCellRowYToConnectDWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DWCellColXToConnectCW {
                get {
                    try {
                        return ((int)(this[this.tableRTenv.DWCellColXToConnectCWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'DWCellColXToConnectCW\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.DWCellColXToConnectCWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DWCellRowYToConnectCW {
                get {
                    try {
                        return ((int)(this[this.tableRTenv.DWCellRowYToConnectCWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'DWCellRowYToConnectCW\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.DWCellRowYToConnectCWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int RFInterval_min {
                get {
                    try {
                        return ((int)(this[this.tableRTenv.RFInterval_minColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'RFInterval_min\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.RFInterval_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int OutputInterval_min {
                get {
                    try {
                        return ((int)(this[this.tableRTenv.OutputInterval_minColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'OutputInterval_min\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.OutputInterval_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RTstartingTime {
                get {
                    try {
                        return ((string)(this[this.tableRTenv.RTstartingTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'RTenv\' 테이블의 \'RTstartingTime\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRTenv.RTstartingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProjectFPNNull() {
                return this.IsNull(this.tableRTenv.ProjectFPNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProjectFPNNull() {
                this[this.tableRTenv.ProjectFPNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRTRFfolderNameNull() {
                return this.IsNull(this.tableRTenv.RTRFfolderNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRTRFfolderNameNull() {
                this[this.tableRTenv.RTRFfolderNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsFCNull() {
                return this.IsNull(this.tableRTenv.IsFCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsFCNull() {
                this[this.tableRTenv.IsFCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsDWSExistNull() {
                return this.IsNull(this.tableRTenv.IsDWSExistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsDWSExistNull() {
                this[this.tableRTenv.IsDWSExistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCWCellColXToConnectDWNull() {
                return this.IsNull(this.tableRTenv.CWCellColXToConnectDWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCWCellColXToConnectDWNull() {
                this[this.tableRTenv.CWCellColXToConnectDWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCWCellRowYToConnectDWNull() {
                return this.IsNull(this.tableRTenv.CWCellRowYToConnectDWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCWCellRowYToConnectDWNull() {
                this[this.tableRTenv.CWCellRowYToConnectDWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDWCellColXToConnectCWNull() {
                return this.IsNull(this.tableRTenv.DWCellColXToConnectCWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDWCellColXToConnectCWNull() {
                this[this.tableRTenv.DWCellColXToConnectCWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDWCellRowYToConnectCWNull() {
                return this.IsNull(this.tableRTenv.DWCellRowYToConnectCWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDWCellRowYToConnectCWNull() {
                this[this.tableRTenv.DWCellRowYToConnectCWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRFInterval_minNull() {
                return this.IsNull(this.tableRTenv.RFInterval_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRFInterval_minNull() {
                this[this.tableRTenv.RFInterval_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutputInterval_minNull() {
                return this.IsNull(this.tableRTenv.OutputInterval_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutputInterval_minNull() {
                this[this.tableRTenv.OutputInterval_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRTstartingTimeNull() {
                return this.IsNull(this.tableRTenv.RTstartingTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRTstartingTimeNull() {
                this[this.tableRTenv.RTstartingTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SubWatershedSettingsRow : global::System.Data.DataRow {
            
            private SubWatershedSettingsDataTable tableSubWatershedSettings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SubWatershedSettingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubWatershedSettings = ((SubWatershedSettingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableSubWatershedSettings.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double IniSaturation {
                get {
                    return ((double)(this[this.tableSubWatershedSettings.IniSaturationColumn]));
                }
                set {
                    this[this.tableSubWatershedSettings.IniSaturationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double MinSlopeOF {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.MinSlopeOFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'MinSlopeOF\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.MinSlopeOFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UnsaturatedKType {
                get {
                    try {
                        return ((string)(this[this.tableSubWatershedSettings.UnsaturatedKTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'UnsaturatedKType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.UnsaturatedKTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CoefUnsaturatedK {
                get {
                    try {
                        return ((string)(this[this.tableSubWatershedSettings.CoefUnsaturatedKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'CoefUnsaturatedK\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.CoefUnsaturatedKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double MinSlopeChBed {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.MinSlopeChBedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'MinSlopeChBed\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.MinSlopeChBedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double MinChBaseWidth {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.MinChBaseWidthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'MinChBaseWidth\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.MinChBaseWidthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double ChRoughness {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.ChRoughnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'ChRoughness\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.ChRoughnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DryStreamOrder {
                get {
                    try {
                        return ((int)(this[this.tableSubWatershedSettings.DryStreamOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'DryStreamOrder\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.DryStreamOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double IniFlow {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.IniFlowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'IniFlow\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.IniFlowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double CalCoefLCRoughness {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.CalCoefLCRoughnessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'CalCoefLCRoughness\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.CalCoefLCRoughnessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double CalCoefPorosity {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.CalCoefPorosityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'CalCoefPorosity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.CalCoefPorosityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double CalCoefWFSuctionHead {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.CalCoefWFSuctionHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'CalCoefWFSuctionHead\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.CalCoefWFSuctionHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double CalCoefHydraulicK {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.CalCoefHydraulicKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'CalCoefHydraulicK\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.CalCoefHydraulicKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double CalCoefSoilDepth {
                get {
                    try {
                        return ((double)(this[this.tableSubWatershedSettings.CalCoefSoilDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'CalCoefSoilDepth\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.CalCoefSoilDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UserSet {
                get {
                    try {
                        return ((string)(this[this.tableSubWatershedSettings.UserSetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SubWatershedSettings\' 테이블의 \'UserSet\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSubWatershedSettings.UserSetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableSubWatershedSettings.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDNull() {
                this[this.tableSubWatershedSettings.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMinSlopeOFNull() {
                return this.IsNull(this.tableSubWatershedSettings.MinSlopeOFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMinSlopeOFNull() {
                this[this.tableSubWatershedSettings.MinSlopeOFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnsaturatedKTypeNull() {
                return this.IsNull(this.tableSubWatershedSettings.UnsaturatedKTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnsaturatedKTypeNull() {
                this[this.tableSubWatershedSettings.UnsaturatedKTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCoefUnsaturatedKNull() {
                return this.IsNull(this.tableSubWatershedSettings.CoefUnsaturatedKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCoefUnsaturatedKNull() {
                this[this.tableSubWatershedSettings.CoefUnsaturatedKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMinSlopeChBedNull() {
                return this.IsNull(this.tableSubWatershedSettings.MinSlopeChBedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMinSlopeChBedNull() {
                this[this.tableSubWatershedSettings.MinSlopeChBedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMinChBaseWidthNull() {
                return this.IsNull(this.tableSubWatershedSettings.MinChBaseWidthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMinChBaseWidthNull() {
                this[this.tableSubWatershedSettings.MinChBaseWidthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsChRoughnessNull() {
                return this.IsNull(this.tableSubWatershedSettings.ChRoughnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetChRoughnessNull() {
                this[this.tableSubWatershedSettings.ChRoughnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDryStreamOrderNull() {
                return this.IsNull(this.tableSubWatershedSettings.DryStreamOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDryStreamOrderNull() {
                this[this.tableSubWatershedSettings.DryStreamOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIniFlowNull() {
                return this.IsNull(this.tableSubWatershedSettings.IniFlowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIniFlowNull() {
                this[this.tableSubWatershedSettings.IniFlowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCalCoefLCRoughnessNull() {
                return this.IsNull(this.tableSubWatershedSettings.CalCoefLCRoughnessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCalCoefLCRoughnessNull() {
                this[this.tableSubWatershedSettings.CalCoefLCRoughnessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCalCoefPorosityNull() {
                return this.IsNull(this.tableSubWatershedSettings.CalCoefPorosityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCalCoefPorosityNull() {
                this[this.tableSubWatershedSettings.CalCoefPorosityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCalCoefWFSuctionHeadNull() {
                return this.IsNull(this.tableSubWatershedSettings.CalCoefWFSuctionHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCalCoefWFSuctionHeadNull() {
                this[this.tableSubWatershedSettings.CalCoefWFSuctionHeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCalCoefHydraulicKNull() {
                return this.IsNull(this.tableSubWatershedSettings.CalCoefHydraulicKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCalCoefHydraulicKNull() {
                this[this.tableSubWatershedSettings.CalCoefHydraulicKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCalCoefSoilDepthNull() {
                return this.IsNull(this.tableSubWatershedSettings.CalCoefSoilDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCalCoefSoilDepthNull() {
                this[this.tableSubWatershedSettings.CalCoefSoilDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUserSetNull() {
                return this.IsNull(this.tableSubWatershedSettings.UserSetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUserSetNull() {
                this[this.tableSubWatershedSettings.UserSetColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WatchPointsRow : global::System.Data.DataRow {
            
            private WatchPointsDataTable tableWatchPoints;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal WatchPointsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWatchPoints = ((WatchPointsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int CVID {
                get {
                    try {
                        return ((int)(this[this.tableWatchPoints.CVIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'WatchPoints\' 테이블의 \'CVID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableWatchPoints.CVIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableWatchPoints.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'WatchPoints\' 테이블의 \'Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableWatchPoints.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ColX {
                get {
                    try {
                        return ((int)(this[this.tableWatchPoints.ColXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'WatchPoints\' 테이블의 \'ColX\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableWatchPoints.ColXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int RowY {
                get {
                    try {
                        return ((int)(this[this.tableWatchPoints.RowYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'WatchPoints\' 테이블의 \'RowY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableWatchPoints.RowYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCVIDNull() {
                return this.IsNull(this.tableWatchPoints.CVIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCVIDNull() {
                this[this.tableWatchPoints.CVIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableWatchPoints.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNameNull() {
                this[this.tableWatchPoints.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsColXNull() {
                return this.IsNull(this.tableWatchPoints.ColXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetColXNull() {
                this[this.tableWatchPoints.ColXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRowYNull() {
                return this.IsNull(this.tableWatchPoints.RowYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRowYNull() {
                this[this.tableWatchPoints.RowYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FlowControlGridRow : global::System.Data.DataRow {
            
            private FlowControlGridDataTable tableFlowControlGrid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal FlowControlGridRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFlowControlGrid = ((FlowControlGridDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int CVID {
                get {
                    try {
                        return ((int)(this[this.tableFlowControlGrid.CVIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'CVID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.CVIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'Name\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ColX {
                get {
                    try {
                        return ((int)(this[this.tableFlowControlGrid.ColXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ColX\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ColXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int RowY {
                get {
                    try {
                        return ((int)(this[this.tableFlowControlGrid.RowYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'RowY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.RowYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ControlType {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.ControlTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ControlType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ControlTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DT {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'DT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FlowDataFile {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.FlowDataFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'FlowDataFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.FlowDataFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IniStorage {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.IniStorageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'IniStorage\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.IniStorageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MaxStorage {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.MaxStorageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'MaxStorage\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.MaxStorageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MaxStorageR {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.MaxStorageRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'MaxStorageR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.MaxStorageRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ROType {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.ROTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ROType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ROTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ROConstQ {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.ROConstQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ROConstQ\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ROConstQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ROConstQDuration {
                get {
                    try {
                        return ((string)(this[this.tableFlowControlGrid.ROConstQDurationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ROConstQDuration\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ROConstQDurationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float ROSDEqA {
                get {
                    try {
                        return ((float)(this[this.tableFlowControlGrid.ROSDEqAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ROSDEqA\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ROSDEqAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float ROSDEqB {
                get {
                    try {
                        return ((float)(this[this.tableFlowControlGrid.ROSDEqBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ROSDEqB\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ROSDEqBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float ROSDEqC {
                get {
                    try {
                        return ((float)(this[this.tableFlowControlGrid.ROSDEqCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ROSDEqC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ROSDEqCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float ROSDEqD {
                get {
                    try {
                        return ((float)(this[this.tableFlowControlGrid.ROSDEqDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ROSDEqD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ROSDEqDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float ROSDEqE {
                get {
                    try {
                        return ((float)(this[this.tableFlowControlGrid.ROSDEqEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ROSDEqE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ROSDEqEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float ROSDEqF {
                get {
                    try {
                        return ((float)(this[this.tableFlowControlGrid.ROSDEqFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'FlowControlGrid\' 테이블의 \'ROSDEqF\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableFlowControlGrid.ROSDEqFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCVIDNull() {
                return this.IsNull(this.tableFlowControlGrid.CVIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCVIDNull() {
                this[this.tableFlowControlGrid.CVIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableFlowControlGrid.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNameNull() {
                this[this.tableFlowControlGrid.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsColXNull() {
                return this.IsNull(this.tableFlowControlGrid.ColXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetColXNull() {
                this[this.tableFlowControlGrid.ColXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRowYNull() {
                return this.IsNull(this.tableFlowControlGrid.RowYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRowYNull() {
                this[this.tableFlowControlGrid.RowYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsControlTypeNull() {
                return this.IsNull(this.tableFlowControlGrid.ControlTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetControlTypeNull() {
                this[this.tableFlowControlGrid.ControlTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDTNull() {
                return this.IsNull(this.tableFlowControlGrid.DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDTNull() {
                this[this.tableFlowControlGrid.DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFlowDataFileNull() {
                return this.IsNull(this.tableFlowControlGrid.FlowDataFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFlowDataFileNull() {
                this[this.tableFlowControlGrid.FlowDataFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIniStorageNull() {
                return this.IsNull(this.tableFlowControlGrid.IniStorageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIniStorageNull() {
                this[this.tableFlowControlGrid.IniStorageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxStorageNull() {
                return this.IsNull(this.tableFlowControlGrid.MaxStorageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxStorageNull() {
                this[this.tableFlowControlGrid.MaxStorageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxStorageRNull() {
                return this.IsNull(this.tableFlowControlGrid.MaxStorageRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxStorageRNull() {
                this[this.tableFlowControlGrid.MaxStorageRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROTypeNull() {
                return this.IsNull(this.tableFlowControlGrid.ROTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROTypeNull() {
                this[this.tableFlowControlGrid.ROTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROConstQNull() {
                return this.IsNull(this.tableFlowControlGrid.ROConstQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROConstQNull() {
                this[this.tableFlowControlGrid.ROConstQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROConstQDurationNull() {
                return this.IsNull(this.tableFlowControlGrid.ROConstQDurationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROConstQDurationNull() {
                this[this.tableFlowControlGrid.ROConstQDurationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROSDEqANull() {
                return this.IsNull(this.tableFlowControlGrid.ROSDEqAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROSDEqANull() {
                this[this.tableFlowControlGrid.ROSDEqAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROSDEqBNull() {
                return this.IsNull(this.tableFlowControlGrid.ROSDEqBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROSDEqBNull() {
                this[this.tableFlowControlGrid.ROSDEqBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROSDEqCNull() {
                return this.IsNull(this.tableFlowControlGrid.ROSDEqCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROSDEqCNull() {
                this[this.tableFlowControlGrid.ROSDEqCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROSDEqDNull() {
                return this.IsNull(this.tableFlowControlGrid.ROSDEqDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROSDEqDNull() {
                this[this.tableFlowControlGrid.ROSDEqDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROSDEqENull() {
                return this.IsNull(this.tableFlowControlGrid.ROSDEqEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROSDEqENull() {
                this[this.tableFlowControlGrid.ROSDEqEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsROSDEqFNull() {
                return this.IsNull(this.tableFlowControlGrid.ROSDEqFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetROSDEqFNull() {
                this[this.tableFlowControlGrid.ROSDEqFColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GreenAmptParameterRow : global::System.Data.DataRow {
            
            private GreenAmptParameterDataTable tableGreenAmptParameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal GreenAmptParameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGreenAmptParameter = ((GreenAmptParameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int GridValue {
                get {
                    try {
                        return ((int)(this[this.tableGreenAmptParameter.GridValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'GreenAmptParameter\' 테이블의 \'GridValue\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableGreenAmptParameter.GridValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string USERSoil {
                get {
                    try {
                        return ((string)(this[this.tableGreenAmptParameter.USERSoilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'GreenAmptParameter\' 테이블의 \'USERSoil\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableGreenAmptParameter.USERSoilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GRMCode {
                get {
                    try {
                        return ((string)(this[this.tableGreenAmptParameter.GRMCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'GreenAmptParameter\' 테이블의 \'GRMCode\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableGreenAmptParameter.GRMCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double Porosity {
                get {
                    try {
                        return ((double)(this[this.tableGreenAmptParameter.PorosityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'GreenAmptParameter\' 테이블의 \'Porosity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableGreenAmptParameter.PorosityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double EffectivePorosity {
                get {
                    try {
                        return ((double)(this[this.tableGreenAmptParameter.EffectivePorosityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'GreenAmptParameter\' 테이블의 \'EffectivePorosity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableGreenAmptParameter.EffectivePorosityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double WFSoilSuctionHead {
                get {
                    try {
                        return ((double)(this[this.tableGreenAmptParameter.WFSoilSuctionHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'GreenAmptParameter\' 테이블의 \'WFSoilSuctionHead\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableGreenAmptParameter.WFSoilSuctionHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double HydraulicConductivity {
                get {
                    try {
                        return ((double)(this[this.tableGreenAmptParameter.HydraulicConductivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'GreenAmptParameter\' 테이블의 \'HydraulicConductivity\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableGreenAmptParameter.HydraulicConductivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGridValueNull() {
                return this.IsNull(this.tableGreenAmptParameter.GridValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGridValueNull() {
                this[this.tableGreenAmptParameter.GridValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUSERSoilNull() {
                return this.IsNull(this.tableGreenAmptParameter.USERSoilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUSERSoilNull() {
                this[this.tableGreenAmptParameter.USERSoilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGRMCodeNull() {
                return this.IsNull(this.tableGreenAmptParameter.GRMCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGRMCodeNull() {
                this[this.tableGreenAmptParameter.GRMCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPorosityNull() {
                return this.IsNull(this.tableGreenAmptParameter.PorosityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPorosityNull() {
                this[this.tableGreenAmptParameter.PorosityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEffectivePorosityNull() {
                return this.IsNull(this.tableGreenAmptParameter.EffectivePorosityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEffectivePorosityNull() {
                this[this.tableGreenAmptParameter.EffectivePorosityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWFSoilSuctionHeadNull() {
                return this.IsNull(this.tableGreenAmptParameter.WFSoilSuctionHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWFSoilSuctionHeadNull() {
                this[this.tableGreenAmptParameter.WFSoilSuctionHeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHydraulicConductivityNull() {
                return this.IsNull(this.tableGreenAmptParameter.HydraulicConductivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHydraulicConductivityNull() {
                this[this.tableGreenAmptParameter.HydraulicConductivityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SoilDepthRow : global::System.Data.DataRow {
            
            private SoilDepthDataTable tableSoilDepth;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SoilDepthRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSoilDepth = ((SoilDepthDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int GridValue {
                get {
                    try {
                        return ((int)(this[this.tableSoilDepth.GridValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SoilDepth\' 테이블의 \'GridValue\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSoilDepth.GridValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UserDepthClass {
                get {
                    if (this.IsUserDepthClassNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableSoilDepth.UserDepthClassColumn]));
                    }
                }
                set {
                    this[this.tableSoilDepth.UserDepthClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GRMCode {
                get {
                    try {
                        return ((string)(this[this.tableSoilDepth.GRMCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SoilDepth\' 테이블의 \'GRMCode\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSoilDepth.GRMCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float SoilDepth {
                get {
                    try {
                        return ((float)(this[this.tableSoilDepth.SoilDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'SoilDepth\' 테이블의 \'SoilDepth\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableSoilDepth.SoilDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGridValueNull() {
                return this.IsNull(this.tableSoilDepth.GridValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGridValueNull() {
                this[this.tableSoilDepth.GridValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUserDepthClassNull() {
                return this.IsNull(this.tableSoilDepth.UserDepthClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUserDepthClassNull() {
                this[this.tableSoilDepth.UserDepthClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGRMCodeNull() {
                return this.IsNull(this.tableSoilDepth.GRMCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGRMCodeNull() {
                this[this.tableSoilDepth.GRMCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSoilDepthNull() {
                return this.IsNull(this.tableSoilDepth.SoilDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSoilDepthNull() {
                this[this.tableSoilDepth.SoilDepthColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LandCoverRow : global::System.Data.DataRow {
            
            private LandCoverDataTable tableLandCover;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal LandCoverRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLandCover = ((LandCoverDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int GridValue {
                get {
                    try {
                        return ((int)(this[this.tableLandCover.GridValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'LandCover\' 테이블의 \'GridValue\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableLandCover.GridValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UserLandCover {
                get {
                    if (this.IsUserLandCoverNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableLandCover.UserLandCoverColumn]));
                    }
                }
                set {
                    this[this.tableLandCover.UserLandCoverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GRMCode {
                get {
                    try {
                        return ((string)(this[this.tableLandCover.GRMCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'LandCover\' 테이블의 \'GRMCode\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableLandCover.GRMCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float RoughnessCoefficient {
                get {
                    try {
                        return ((float)(this[this.tableLandCover.RoughnessCoefficientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'LandCover\' 테이블의 \'RoughnessCoefficient\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableLandCover.RoughnessCoefficientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float ImperviousRatio {
                get {
                    try {
                        return ((float)(this[this.tableLandCover.ImperviousRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'LandCover\' 테이블의 \'ImperviousRatio\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableLandCover.ImperviousRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGridValueNull() {
                return this.IsNull(this.tableLandCover.GridValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGridValueNull() {
                this[this.tableLandCover.GridValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUserLandCoverNull() {
                return this.IsNull(this.tableLandCover.UserLandCoverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUserLandCoverNull() {
                this[this.tableLandCover.UserLandCoverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGRMCodeNull() {
                return this.IsNull(this.tableLandCover.GRMCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGRMCodeNull() {
                this[this.tableLandCover.GRMCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRoughnessCoefficientNull() {
                return this.IsNull(this.tableLandCover.RoughnessCoefficientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRoughnessCoefficientNull() {
                this[this.tableLandCover.RoughnessCoefficientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImperviousRatioNull() {
                return this.IsNull(this.tableLandCover.ImperviousRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImperviousRatioNull() {
                this[this.tableLandCover.ImperviousRatioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class ProjectSettingsRowChangeEvent : global::System.EventArgs {
            
            private ProjectSettingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRowChangeEvent(ProjectSettingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class RTenvRowChangeEvent : global::System.EventArgs {
            
            private RTenvRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RTenvRowChangeEvent(RTenvRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RTenvRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class SubWatershedSettingsRowChangeEvent : global::System.EventArgs {
            
            private SubWatershedSettingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SubWatershedSettingsRowChangeEvent(SubWatershedSettingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SubWatershedSettingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class WatchPointsRowChangeEvent : global::System.EventArgs {
            
            private WatchPointsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WatchPointsRowChangeEvent(WatchPointsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public WatchPointsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class FlowControlGridRowChangeEvent : global::System.EventArgs {
            
            private FlowControlGridRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FlowControlGridRowChangeEvent(FlowControlGridRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public FlowControlGridRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class GreenAmptParameterRowChangeEvent : global::System.EventArgs {
            
            private GreenAmptParameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public GreenAmptParameterRowChangeEvent(GreenAmptParameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public GreenAmptParameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class SoilDepthRowChangeEvent : global::System.EventArgs {
            
            private SoilDepthRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SoilDepthRowChangeEvent(SoilDepthRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SoilDepthRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class LandCoverRowChangeEvent : global::System.EventArgs {
            
            private LandCoverRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LandCoverRowChangeEvent(LandCoverRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LandCoverRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591